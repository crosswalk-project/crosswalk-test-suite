<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="Crosswalk_Sample_App" name="sampleapp-android-tests">
    <set name="SampleApp" type="js">
      <testcase component="Sample Apps" execution_type="manual" id="HangOnMan_Install" priority="P0" purpose="Validate if sample app HangOnMan could be installed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk packer tool 'crosswalk' is downloaded and cd  crosswalk path;
            2.Make sure webapp is downloaded;
            3.Copy your HTML/JS/CSS and related resources into the directory:"crosswalk/app_src/assets";
            4.Make sure device is connected with ubuntu.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HangOnMan_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HangOnMan_UnInstall" priority="P0" purpose="Validate if sample app HangOnMan could be uninstalled successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the HangOnMan webapp is installed
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HangOnMan_Uninstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HangOnMan_Uninstall_WithAppRunning" priority="P2" purpose="Validate Crosswalk support that uninstall the sample app HangOnMan when it's actually running" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure sample app HangOnMan is launched;2.Make sure there sample app HangOnMan is available
          </pre_condition>
          <post_condition />
         <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HangOnMan_Uninstall_WithAppRunning.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HangOnMan_Launch" priority="P1" purpose="Validate if sample app HangOnMan could be launched successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the HangOnMan webapp is installed
          </pre_condition>
          <post_condition />
        <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HangOnMan_Launch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HangOnMan_Close" priority="P2" purpose="Validate if sample app HangOnMan could be closed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the HangOnMan webapp is launched
          </pre_condition>
          <post_condition />
           <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HangOnMan_Close.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HangOnMan_Icon" priority="P0" purpose="Validate if sample app HangOnMan icon display normally" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure HangOnMan webapp is installed;2.Make sure HangOnMan webapp is available
          </pre_condition>
          <post_condition />
        <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HangOnMan_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HangOnMan_Switch" priority="P2" purpose="Validate if sample app HangOnMan could switch back successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the HangOnMan webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HangOnMan_Switch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HangOnMan_Orientation" priority="P2" purpose="Validate if sample app HangOnMan could rotate between portrait orientation screen and landscape orientation screen" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the HangOnMan webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HangOnMan_Orientation.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HangOnMan_AppFunction" priority="P2" purpose="Validate if sample app HangOnMan function could work well" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the HangOnMan webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HangOnMan_AppFunction.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="iSmartbook_Install" priority="P0" purpose="Validate if sample app iSmartbook could be installed successfully" status="designed" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk packer tool 'crosswalk' is downloaded and cd  crosswalk path;
            2.Make sure webapp is downloaded;
            3.Copy your HTML/JS/CSS and related resources into the directory:"crosswalk/app_src/assets";
            4.Make sure device is connected with ubuntu.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/iSmartbook_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="iSmartbook_UnInstall" priority="P0" purpose="Validate if sample app iSmartbook could be uninstalled successfully" status="designed" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the iSmartbook webapp is installed
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/iSmartbook_UnInstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="iSmartbook_Uninstall_WithAppRunning" priority="P2" purpose="Validate Crosswalk support that uninstall the sample app iSmartbook when it's actually running" status="designed" type="Functional">
        <description>
          <pre_condition>
            1.Make sure sample app iSmartbook is launched;2.Make sure there sample app iSmartbook is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/iSmartbook_Uninstall_WithAppRunning.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="iSmartbook_Launch" priority="P1" purpose="Validate if sample app iSmartbook could be launched successfully" status="designed" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the iSmartbook webapp is installed
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/iSmartbook_Launch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="iSmartbook_Close" priority="P2" purpose="Validate if sample app iSmartbook could be closed successfully" status="designed" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the iSmartbook webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/iSmartbook_Close.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="iSmartbook_Icon" priority="P0" purpose="Validate if sample app iSmartbook icon display normally" status="designed" type="Functional">
        <description>
          <pre_condition>
            1.Make sure iSmartbook webapp is installed;2.Make sure iSmartbook webapp is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/iSmartbook_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="iSmartbook_Switch" priority="P2" purpose="Validate if sample app iSmartbook could switch back successfully" status="designed" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the iSmartbook webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/iSmartbook_Switch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="iSmartbook_Orientation" priority="P2" purpose="Validate if sample app iSmartbook could rotate between portrait orientation screen and landscape orientation screen" status="designed" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the iSmartbook webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/iSmartbook_Orientation.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="iSmartbook_AppFunction" priority="P2" purpose="Validate if sample app iSmartbook function could work well" status="designed" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the iSmartbook webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/iSmartbook_AppFunction.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HexGL_Install" priority="P0" purpose="Validate if HexGL could be installed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure HexGL is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HexGL_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HexGL_Uninstall" priority="P0" purpose="Validate if sample app HexGL could be uninstalled successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure HexGL webapp is launched;2.Make sure HexGL webapp is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HexGL_Uninstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HexGL_Uninstall_WithAppRunning" priority="P2" purpose="Validate Crosswalk support that uninstall the sample app HexGL when it's actually running" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure sample app HexGL is launched;
            2.Make sure there sample app HexGL is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HexGL_Uninstall_WithAppRunning.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HexGL_Launch" priority="P1" purpose="Validate sample app HexGL could be launched successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure HexGL webapp is launched;2.Make sure HexGL webapp is installed on Android OS
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HexGL_Launch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HexGL_Close" priority="P1" purpose="Validate sample app HexGL could be closed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure HexGL webapp is launched;2.Make sure HexGL is running
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HexGL_Close.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HexGL_Icon" priority="P0" purpose="Validate if sample app HexGL icon display normally" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure HexGL webapp is launched;2.Make sure HexGL is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HexGL_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HexGL_Switch" priority="P2" purpose="Validate if sample app HexGL could switch back successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure HexGL webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HexGL_Switch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HexGL_Orientation" priority="P2" purpose="Validate if sample app HexGL could rotate between portrait orientation screen and landscape orientation screen" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure HexGL webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HexGL_Orientation.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="HexGL_AppFunction" priority="P2" purpose="Validate if sample app HexGL function could work well" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure HexGL webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/HexGL_AppFunction.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="MemoryGame_Install" priority="P0" purpose="Validate if MemoryGame could be installed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure MemoryGame is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/MemoryGame_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="MemoryGame_Uninstall" priority="P0" purpose="Validate if sample app MemoryGame could be uninstalled successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure MemoryGame webapp is launched;2.Make sure MemoryGame webapp is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/MemoryGame_Uninstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="MemoryGame_Uninstall_WithAppRunning" priority="P2" purpose="Validate Crosswalk support that uninstall the sample app MemoryGame when it's actually running" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure sample app MemoryGame is launched;
            2.Make sure there sample app MemoryGame is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/MemoryGame_Uninstall_WithAppRunning.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="MemoryGame_Launch" priority="P1" purpose="Validate sample app MemoryGame could be launched successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure MemoryGame webapp is launched;2.Make sure MemoryGame webapp is installed on Android OS
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/MemoryGame_Launch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="MemoryGame_Close" priority="P1" purpose="Validate sample app MemoryGame could be closed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure MemoryGame webapp is launched;2.Make sure MemoryGame is running
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/MemoryGame_Close.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="MemoryGame_Icon" priority="P0" purpose="Validate if sample app MemoryGame icon display normally" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure MemoryGame webapp is launched;2.Make sure MemoryGame is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/MemoryGame_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="MemoryGame_Switch" priority="P2" purpose="Validate if sample app MemoryGame could switch back successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure MemoryGame webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/MemoryGame_Switch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="MemoryGame_Orientation" priority="P2" purpose="Validate if sample app MemoryGame could rotate between portrait orientation screen and landscape orientation screen" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure MemoryGame webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/MemoryGame_Orientation.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="MemoryGame_AppFunction" priority="P2" purpose="Validate if sample app MemoryGame function could work well" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure MemoryGame webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/MemoryGame_AppFunction.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_Install" priority="P0" purpose="Validate if WebRTC could be installed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure WebRTC is available http://10.239.97.60/chatbox/login.html
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_Uninstall" priority="P0" purpose="Validate if sample app WebRTC could be uninstalled successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure WebRTC webapp is available;
            3.Make sure WebRTC webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_Uninstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_Uninstall_WithAppRunning" priority="P2" purpose="Validate Crosswalk support that uninstall the sample app WebRTC when it's actually running" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure there sample app WebRTC is available;
            3.Make sure sample app WebRTC is launched.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_Uninstall_WithAppRunning.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_Launch" priority="P1" purpose="Validate sample app WebRTC could be launched successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure WebRTC: http://10.239.97.60/chatbox/login.html is available;
            3.Make sure WebRTC webapp is installed on Android OS;
            4.Make sure network can be used.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_Launch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_Close" priority="P1" purpose="Validate sample app WebRTC could be closed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure WebRTC webapp is launched;
            3.Make sure WebRTC webapp is running;
            4.Make sure network can be used.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_Close.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_Icon" priority="P2" purpose="Validate if sample app WebRTC icon display normally" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure WebRTC webapp is installed and http://10.239.97.60/chatbox/login.html is available;
            3.Make sure WebRTC webapp is available.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_Switch" priority="P2" purpose="Validate if sample app WebRTC could switch back successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure WebRTC webapp is launched and http://10.239.97.60/chatbox/login.html is available;
            3.Make sure network can be used.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_Switch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_Orientation" priority="P2" purpose="Validate if sample app WebRTC could rotate between portrait orientation screen and landscape orientation screen" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure WebRTC webapp is launched and http://10.239.97.60/chatbox/login.html is available;
            3.Make sure network can be used.
          </pre_condition>
            <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_Orientation.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_Login" priority="P2" purpose="Validate WebRTC sample app  could login successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure WebRTC webapp is launched and http://10.239.97.60/chatbox/login.html is available;
            3.Make sure network can be used.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_Login.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_TextChat" priority="P1" purpose="Validate WebRTC sample app  could text chat" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure the http://10.239.97.60/chatbox/login.html is available and WebRTC webapp is login;
            3.Make sure network can be used.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_TextChat.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="WebRTC_VideoChat" priority="P2" purpose="Validate WebRTC sample app  could video chat" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure the http://10.239.97.60/chatbox/login.html is available and WebRTC webapp is login;
            3.Make sure network can be used.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/WebRTC_VideoChat.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="Gallery_Install" priority="P0" purpose="Validate if sample app Gallery could be installed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure webapp is downloaded;
            3.Copy your HTML/JS/CSS and related resources into the directory:"crosswalk/app_src/assets";
            4.Make sure device is connected with ubuntu.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/Gallery_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="Gallery_UnInstall" priority="P0" purpose="Validate if sample app Gallery could be uninstalled successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the Gallery webapp is installed.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/Gallery_Uninstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="Gallery_Uninstall_WithAppRunning" priority="P2" purpose="Validate Crosswalk support that uninstall the sample app Gallery when it's actually running" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure sample app Gallery is launched;
          </pre_condition>
          <post_condition />
         <test_script_entry>/opt/sampleapp-android-tests/sampleapp/Gallery_Uninstall_WithAppRunning.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="Gallery_Launch" priority="P1" purpose="Validate if sample app Gallery could be launched successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the Gallery webapp is installed
          </pre_condition>
          <post_condition />
        <test_script_entry>/opt/sampleapp-android-tests/sampleapp/Gallery_Launch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="Gallery_Close" priority="P2" purpose="Validate if sample app Gallery could be closed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the Gallery webapp is launched
          </pre_condition>
          <post_condition />
           <test_script_entry>/opt/sampleapp-android-tests/sampleapp/Gallery_Close.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="Gallery_Icon" priority="P2" purpose="Validate if sample app Gallery icon display normally" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure Gallery webapp is installed;
            2.Make sure Gallery webapp is available.
          </pre_condition>
          <post_condition />
        <test_script_entry>/opt/sampleapp-android-tests/sampleapp/Gallery_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="Gallery_Switch" priority="P2" purpose="Validate if sample app Gallery could switch back successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the Gallery webapp is launched.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/Gallery_Switch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="Gallery_Orientation" priority="P2" purpose="Validate if sample app Gallery could rotate between portrait orientation screen and landscape orientation screen" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the Gallery webapp is launched.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/Gallery_Orientation.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="Gallery_AppFunction" priority="P2" purpose="Validate if sample app Gallery function could work well" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure the Gallery webapp is launched.
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/Gallery_AppFunction.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SysApps_DeviceCapabilities_Install" priority="P0" purpose="Validate if SysApps_DeviceCapabilities could be installed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure SysApps_DeviceCapabilities is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SysApps_DeviceCapabilities_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SysApps_DeviceCapabilities_Uninstall" priority="P0" purpose="Validate if sample app SysApps_DeviceCapabilities could be uninstalled successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure SysApps_DeviceCapabilities webapp is launched;2.Make sure SysApps_DeviceCapabilities webapp is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SysApps_DeviceCapabilities_Uninstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SysApps_DeviceCapabilities_Uninstall_WithAppRunning" priority="P2" purpose="Validate Crosswalk support that uninstall the sample app SysApps_DeviceCapabilities when it's actually running" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure sample app SysApps_DeviceCapabilities is launched;
            2.Make sure there sample app SysApps_DeviceCapabilities is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SysApps_DeviceCapabilities_Uninstall_WithAppRunning.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SysApps_DeviceCapabilities_Launch" priority="P1" purpose="Validate sample app SysApps_DeviceCapabilities could be launched successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure SysApps_DeviceCapabilities webapp is launched;
            2.Make sure SysApps_DeviceCapabilities webapp is installed on Android OS
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SysApps_DeviceCapabilities_Launch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SysApps_DeviceCapabilities_Close" priority="P1" purpose="Validate sample app SysApps_DeviceCapabilities could be closed successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure SysApps_DeviceCapabilities webapp is launched;
            2.Make sure SysApps_DeviceCapabilities is running
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SysApps_DeviceCapabilities_Close.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SysApps_DeviceCapabilities_Icon" priority="P0" purpose="Validate if sample app SysApps_DeviceCapabilities icon display normally" status="approved" type="Functional">
        <description>
          <pre_condition>
            1.Make sure SysApps_DeviceCapabilities webapp is launched;
            2.Make sure SysApps_DeviceCapabilities is available
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SysApps_DeviceCapabilities_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SysApps_DeviceCapabilities_Switch" priority="P2" purpose="Validate if sample app SysApps_DeviceCapabilities could switch back successfully" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure SysApps_DeviceCapabilities webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SysApps_DeviceCapabilities_Switch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SysApps_DeviceCapabilities_Orientation" priority="P2" purpose="Validate if sample app SysApps_DeviceCapabilities could rotate between portrait orientation screen and landscape orientation screen" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure SysApps_DeviceCapabilities webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SysApps_DeviceCapabilities_Orientation.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SysApps_DeviceCapabilities_AppFunction" priority="P2" purpose="Validate if sample app SysApps_DeviceCapabilities function could work well" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure SysApps_DeviceCapabilities webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SysApps_DeviceCapabilities_AppFunction.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M39_Beacon" priority="P2" purpose="Validate if Beacon is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M39_Beacon webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M39_Beacon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M39_Generators" priority="P2" purpose="Validate if ES6 generator is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M39_Generators webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M39_Generators.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M39_WebAnimationsJavascriptAPI" priority="P2" purpose="Validate if Web Animations Javascript API [playback control] is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M39_WebAnimationsJavascriptAPI webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M39_WebAnimationsJavascriptAPI.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M39_WebApplicationManifest" priority="P2" purpose="Validate if Web Application Manifest is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M39_WebApplicationManifest webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M39_WebApplicationManifest.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M38_CollectionsIterators" priority="P2" purpose="Check collections-iterators feature is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M38_CollectionsIterators webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M38_CollectionsIterators.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M38_FileConstructor" priority="P2" purpose="Check file constructor feature is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M38_FileConstructor webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M38_FileConstructor.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M38_PictureElement" priority="P2" purpose="Check picture element feature is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M38_PictureElement webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M38_PictureElement.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M38_ScreenOrientation" priority="P2" purpose="Check screen orientation feature is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M38_ScreenOrientation webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M38_ScreenOrientation.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M40_ReportValidity" priority="P2" purpose="Check if reportValidity() method is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M40_ReportValidity webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M40_ReportValidity.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M40_ServiceWorker" priority="P2" purpose="Check if service worker is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M40_ServiceWorker webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M40_ServiceWorker.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M37_NavigatorLanguage" priority="P2" purpose="Check if navigator.language feature is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M37_NavigatorLanguage webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M37_NavigatorLanguage.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SIMD_AppFunction" priority="P2" purpose="Validate if sample app SIMD function could work well" status="approved" type="Functional">
        <description>
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SIMD_AppFunction.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M41_LexicalDeclarations" priority="P2" purpose="Check if Lexical Declarations is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M41_LexicalDeclarations webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M41_LexicalDeclarations.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M41_MediaQueries" priority="P2" purpose="Check if Media Queries('any-pointer'/'any-hover') is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M41_MediaQueries webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M41_MediaQueries.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M41_PixelatedImage" priority="P2" purpose="Check if Pixelated Image is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M41_PixelatedImage webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M41_PixelatedImage.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M41_TemplateLiterals" priority="P2" purpose="Check if Template Literals is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M41_TemplateLiterals webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M41_TemplateLiterals.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="M41_WebAudioSuspendResume" priority="P2" purpose="Check if WebAudio Suspend/Resume is supported or not" status="approved" type="Functional">
        <description>
          <pre_condition>
            1. Make sure M41_WebAudioSuspendResume webapp is launched
          </pre_condition>
          <post_condition />
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/M41_WebAudioSuspendResume.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SIMD_Close" priority="P1" purpose="Check if SIMD can be closed" status="approved" type="Functional">
        <description>
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SIMD_Close.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SIMD_Icon" priority="P2" purpose="Check if SIMD icon display correctly" status="approved" type="Functional">
        <description>
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SIMD_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SIMD_Install" priority="P0" purpose="Check if SIMD can be installed" status="approved" type="Functional">
        <description>
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SIMD_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SIMD_Launch" priority="P0" purpose="Check if SIMD can be launched" status="approved" type="Functional">
        <description>
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SIMD_Launch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SIMD_Orientation" priority="P2" purpose="Check if SIMD can be orientation" status="approved" type="Functional">
        <description>
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SIMD_Orientation.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SIMD_Switch" priority="P2" purpose="Check if SIMD can be switched" status="approved" type="Functional">
        <description>
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SIMD_Switch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SIMD_Uninstall" priority="P1" purpose="Check if SIMD can be uninstalled" status="approved" type="Functional">
        <description>
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SIMD_Uninstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="SIMD_Uninstall_WithAppRunning" priority="P2" purpose="Check if SIMD can be uninstalled with app running" status="approved" type="Functional">
        <description>
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/SIMD_Uninstall_WithAppRunning.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Sample Apps" execution_type="manual" id="RTC_datachannel" purpose="Check if the first channel onDataChannel can be fired" status="approved" type="Functional">
        <description>
          <test_script_entry>/opt/sampleapp-android-tests/sampleapp/RTC_datachannel.html</test_script_entry>
        </description>
      </testcase>
   </set>
 </suite>
</test_definition>
