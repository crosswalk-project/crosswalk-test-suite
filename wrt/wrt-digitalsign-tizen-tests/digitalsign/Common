#!/bin/bash

#Copyright (c) 2013 Intel Corporation.
#
#Redistribution and use in source and binary forms, with or without modification,
#are permitted provided that the following conditions are met:
#
#* Redistributions of works must retain the original copyright notice, this list
# of conditions and the following disclaimer.
#* Redistributions in binary form must reproduce the original copyright notice,
#  this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#* Neither the name of Intel Corporation nor the names of its contributors
#  may be used to endorse or promote products derived from this work without
#  specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED BY INTEL CORPORATION "AS IS"
#AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#ARE DISCLAIMED. IN NO EVENT SHALL INTEL CORPORATION BE LIABLE FOR ANY DIRECT,
#INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
#OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
#EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#Authors:
#       IVAN CHEN <yufeix.chen@intel.com>

function func_xwalkservice(){
  export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/5000/dbus/user_bus_socket
  systemctl --user status xwalk.service > /dev/null
  pkgcmd -l > /tmp/res.txt
  cat /tmp/res.txt | grep "APPS" >/dev/null
  if [ $? -ne 0  ];then
    echo "setting xwalk service mode fail"
    exit 1
  fi
}

function func_check_xwalkservice(){
  pkgcmd -l > /tmp/res.txt
  cat /tmp/res.txt | grep "APPS" > /dev/null
  if [ $? -ne 0  ];then
    func_xwalkservice
  fi
}

function get_app_id(){
  app_id_tmp=`cat /tmp/install | cut -d / -f 4`
  app_id=`echo $app_id_tmp | sed 's/.$//g'` > /dev/null
}

function check_db(){
  sqlite3 /home/app/.applications/dbspace/.app_info.db "select * from app_info;" | grep $1 | grep $2
  if [ $? -ne 0  ];then
    echo "cannot found $2 in applications.db"
    #uninstall webapp
    pkgcmd -u -n  $app_id -q
    exit 1
  fi
  #uninstall webapp
  if [[ $3 -eq 0 ]]; then
    pkgcmd -u -n  $app_id -q
  fi
}

function install_xpk(){
  pkgcmd -i -t wgt -p $1/$2 -q &> /tmp/install
  cat /tmp/install | grep "DONE"
  if [[ $? -ne 0 ]]; then
    cat /tmp/install | grep "fail"
    if [[ $? -eq 0 ]]; then
      uninstall_exist_xpk $2 -q
      pkgcmd -i -t wgt -p  $1/$2 -q &> /tmp/install
      if [[ $? -ne 0 ]]; then
         echo "The $2  install failure."
         exit 1
      fi
    fi
  fi
  get_app_id
}

function uninstall_exist_xpk(){
  pkgids=`pkgcmd -l | grep $1 | awk '{print $4}'`
  pkgids=${pkgids:1:-1}
  [ -n $pkgids ] & pkgcmd -u -n  $pkgids -q
}
