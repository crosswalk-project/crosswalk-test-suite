<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="Web Runtime" name="tct-pm-wrt-tests">
    <set name="PackageManagement">
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_PackagedAPP_Install" purpose="Check if Packaged Web Application can be installed successfully.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_WRTInstaller.sh Sample-widget.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_local_HostedAPP_Install" purpose="Check if local hosted Web Application can be installed successfully.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_WRTInstaller.sh test-hosted-widget.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_LocalAPP_Install" purpose="Check if Web Application can be installed successfully by using command.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_WRTInstaller.sh Sample-widget.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_APP_WithW3CFormat_Install" purpose="Check if Web Application which is packed with WGT format can be installed successfully.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_WRTInstaller.sh Sample-widget.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_PackagedWGTFile_without_WGT_extention_Install" purpose="Check if the widget renamed extension from 'WGT' to 'EXE' can be installed successfully.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_Install_EXE.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_PackagedZIPFile_with_WGT_extention_Install" purpose="Check if the widget that is renamed with the same extension 'WGT' can be installed successfully.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_Install_changename.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_InstallFailed_Inform" purpose="Check if user is informed when the Web Application cannot be installed.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_InstallerFail.sh test-broken-widget.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_WRTVersionLower_Install_1" purpose="Check if WRT can update the widget when the widget has been installed.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_Install_TwoWidget.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_sidedLoaded_Update_AppId" purpose="Check if Web Applications with same Tizen AppID and Widget ID can be updated successfully.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="150">/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_Install_Update_Widget.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_DifferentWidgetID_Update" purpose="Check if Web Applications with same Tizen AppID and different Widget IDs can be updated successfully.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_WidgetID_Update.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_dataStored_Update" purpose="Check if Web Application resources inside of widget are erased after updated.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_dataStored_Update.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_WebApp_Uninstall" purpose="Check if Web Application can be un-installed successfully.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_Uninstaller.sh Sample-widget.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="uninstallation-application-erased" purpose="Check if all Web Application resources and data (Tizen settings, widget preferences, cookies, local storage) should be erased after uninstalled.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_uninstallation_application_erased.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_OfflineInstall_uninstalling" purpose="Check if UA can install and uninstall different applications offline at the same time.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_OfflineInstall_uninstalling.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_OfflineInstall_updating" purpose="Check if UA can install and update different applications offline at the same time.">
        <description>
          <test_script_entry test_script_expected_result="0" timeout="150">/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_OfflineInstall_updating.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_Inform_Uninstall_Running" purpose="Check if the WebApp can be uninstalled during running.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_Uninstall_Running.sh Sample-widget.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_Uninstall_Inform" purpose="Check if user will be informed failure of uninstallation when the WebApp has been uninstalled.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_Uninstall_Inform.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="WebApp_OfflineUpdate_ReUpdate" purpose="Check if application could be updated when the application is running.">
        <description>
          <test_script_entry timeout="90">/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_OfflineUpdate_ReUpdate.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="WebApp_OfflineUpdate_TwoApp" purpose="Check if package management can upgrade(offline) two webapps respectively.">
        <description>
          <test_script_entry timeout="150">/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_OfflineUpdate_TwoApp.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="PKManagement_OfflineUpdate_MultiApp" purpose="Check if package management can upgrade(offline) multiple webapps respectively.">
        <description>
          <test_script_entry timeout="150">/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_OfflineUpdate_MultiApp.sh</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="widget-distributor-sig-dsp" purpose="Check if the WRT cannot install the widget which contains distributor signature without a dsp:Role signature property.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_InstallerFail.sh 11a.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="widget-distributor-sig-uri" purpose="Check if the WRT cannot install the widget which contains distributor signature with a dsp:Role signature property that does not contain an URI for a distributor role.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_InstallerFail.sh 11b.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="widget-partner-privilege" purpose="Check if the WRT cannot install the widget which is announced with one or more partner API privileges in configuration file.">
        <description>
          <test_script_entry test_script_expected_result="0">app_user@/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_InstallerFail.sh widget-partner-privilege.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="feature-element-be-ignored" purpose="Check if the 'feature' element should be ignored during installation process.">
        <description>
          <test_script_entry timeout="90">/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_WRTInstaller.sh feature-element-be-ignored.wgt</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web/Runtime/PackageManagement" execution_type="auto" id="web-api-version" purpose="Check if WRT should abort installation when the version of Tizen Web API supported by the WRT is lower than the minimum version required by the Web Application.">
        <description>
          <test_script_entry timeout="90">/opt/usr/media/tct/opt/tct-pm-wrt-tests/scripts/wrt_pm_InstallerFail.sh web-api-version.wgt</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>
