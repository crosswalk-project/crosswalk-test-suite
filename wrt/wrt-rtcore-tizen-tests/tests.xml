<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="Runtime_Core" launcher="xwalk" name="wrt-rtcore-tizen-tests">
    <set name="rtcore">
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Name_Blend" purpose="Validate the Manifest name of web app is manifest_name_blend_tests">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Name_Blend.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Name_Letter" purpose="Validate the Manifest name of web app is manifestname">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Name_Letter.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Name_Numeral" purpose="Validate the Manifest name of web app is manifest_name_w123456_tests">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Name_Numeral.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Name_CapitalAndSmall" purpose="Validate the Manifest name of web app is manifest_name_capitalAndsmallLetter_tests">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Name_CapitalAndSmall.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Name_TolerantDot" purpose="Validate the Manifest name of web app is manifest_name_tolerantDot_tests">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Name_TolerantDot.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Name_TolerantStrike" purpose="Validate the Manifest name of web app is manifest_name_tolerantStrike_tests">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Name_TolerantStrike.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_69pixel" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Icon_69pixel.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_117pixel" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Icon_117pixel.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_Bmp" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Icon_Bmp.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_Gif" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Icon_Gif.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_Ico" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Icon_Ico.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_Jpg" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Icon_Jpg.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_One" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Icon_One.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_Two" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Icon_Two.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_Three" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Icon_Three.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_IdentifyingOne" purpose="Validate the version of web app is 1">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device.
            2.Download package resources from otcqa to local
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_IdentifyingOne.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_IdentifyingTwo" purpose="Validate the version of web app is 1.1">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_IdentifyingTwo.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_IdentifyingThree" purpose="Validate the version of web app is 2.1.0">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_IdentifyingThree.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_IdentifyingFour" purpose="Validate the version of web app is 1.0.10.4">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_IdentifyingFour.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Manifest_Version" purpose="Validate the name and version of web app display when manifest version is 2">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Manifest_Version.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_LaunchPath" purpose="Validate the app entry if specified in launch">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_LaunchPath.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_MainScript" purpose="Validate use MainScript the app entry if specified in launch">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_MainScript.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_MainSource1" purpose="Validate use MainSource1 the app entry if specified in launch">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_MainSource1.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_MainSource2" purpose="Validate use MainSource2 the app entry if specified in launch">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_MainSource2.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_MainSourceAndScript1" purpose="Validate use MainSourceAndScript1 the app entry if specified in launch">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_MainSourceAndScript1.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_MainSourceAndScript2" purpose="Validate use MainSourceAndScript2 the app entry if specified in launch">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_MainSourceAndScript2.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_LaunchPathAndMain" purpose="Validate the app entry if specified in launch">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_LaunchPathAndMain.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Digital_Signature_Error" purpose="Validate if the app can install with a bad Digital Signature">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push bad_signature.xpk /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Digital_Signature_Error.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Digital_Signature_Package" purpose="Validate if the app can install with the correct Digital Signature">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push signature.xpk /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Digital_Signature_Package.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_System_Event_onInstalled" purpose="Validate if the system event onInstalled registered at application install time">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_System_Event_onInstalled.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_System_Event_onLaunched" purpose="Validate if the system event onLaunched registered at application install time">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_System_Event_onLaunched.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_System_Event_onSuspend" purpose="Validate if the system event onSuspend registered at application install time">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_System_Event_onSuspend.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_System_Event_onTerminate" purpose="Validate if the system event onTerminate registered at application install time">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Download package resources from otcqa to local;
            3.Push package resources to device,run "sdb push xxx /".
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_System_Event_onTerminate.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="WebApp Lifecycle" execution_type="manual" id="Crosswalk_WebApp_Lifecycle_OneWindow" purpose="Validate if the non-persistent is implemented in crosswalk">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_WebApp_Lifecycle_OneWindow.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="WebApp Lifecycle" execution_type="manual" id="Crosswalk_WebApp_Lifecycle_MultiWindow" purpose="Validate if the xwalk running when the window is not all closed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_WebApp_Lifecycle_MultiWindow.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="WebApp Lifecycle" execution_type="manual" id="Crosswalk_WebApp_Lifecycle_MultiApp" purpose="Validate if the xwalk runing when close all windows in the multiple app one of them">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_WebApp_Lifecycle_MultiApp.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Extend_RequirementCSP" purpose="Validate if webapp normal when use csp in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Extend_RequirementCSP.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Extend_RequirementDescription" purpose="Validate if webapp normal when use description in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Extend_RequirementDescription.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_NullFieldApp" purpose="Validate if pakaging successfully when null app field in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_NullFieldApp.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_NullFieldName" purpose="Validate if pakaging successfully when null name field in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_NullFieldName.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_NullFieldVersion" purpose="Validate if pakaging successfully when null version field in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_NullFieldVersion.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_NullValueApp" purpose="Validate if pakaging successfully when null app value in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_NullValueApp.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_NullValueCSP" purpose="Validate if pakaging successfully when null csp value in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_NullValueCSP.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_NullValueDescription" purpose="Validate if pakaging successfully when null description value in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_NullValueDescription.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_NullValueName" purpose="Validate if pakaging successfully when null name value in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_NullValueName.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_NullValueVersion" purpose="Validate if pakaging successfully when null version value in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_NullValueVersion.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_VersionLetter" purpose="Validate if pakaging successfully when the version is letter in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_VersionLetter.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_VersionLimit" purpose="Validate if pakaging successfully when the version is limit in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_VersionLimit.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_VersionOfflimit" purpose="Validate if pakaging successfully when the version is offlimit in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_VersionOfflimit.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_VersionPrefixNegative" purpose="Validate if pakaging successfully when the version is prefix negative in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_VersionPrefixNegative.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Negative_VersionPrefixZero" purpose="Validate if pakaging successfully when the version is prefix zero in manifest">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Negative_VersionPrefixZero.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Extend_HTMLNamedHTTP" purpose="Validate if pakaging, install, launcher successfully when html named http.html">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Extend_HTMLNamedHTTP.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Extend_NameWithSpace" purpose="Validate if pakaging, install, launcher successfully when name with space">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure nerwork can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Extend_NameWithSpace.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_Special1" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_Special1.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_Special8" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_Special8.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_Special7" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_Special7.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_Special6" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_Special6.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_Special5" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_Special5.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_Special4" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_Special4.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_Special3" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_Special3.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_Special2" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_Special2.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_MainSourceNullValue" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_MainSourceNullValue.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_MainSourceNoFile" purpose="Validate if pakaging, install, launcher successfully when no source file">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_MainSourceNoFile.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_MainSourceNoSource" purpose="Validate if pakaging, install, launcher successfully when no source value">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_MainSourceNoSource.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_MainSourceNoMain" purpose="Validate if pakaging, install, launcher successfully when no main attribute">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_MainSourceNoMain.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_LaunchPathIndexChinese" purpose="Validate if pakaging, install, launcher successfully when index include Chinese">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_LaunchPathIndexChinese.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_LaunchPathIndexBlank" purpose="Validate if pakaging, install, launcher successfully when index is blank">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_LaunchPathIndexBlank.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_LaunchPathNoIndex" purpose="Validate if pakaging, install, launcher successfully when no index file">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_App_LaunchPathNoIndex.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_IdentifyingSame" purpose="Validate if pakaging, install, launcher successfully when version is 1.1.1.1">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_IdentifyingSame.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_IdentifyingSix" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_IdentifyingSix.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_IdentifyingNull" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_IdentifyingNull.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_IdentifyingFourZero" purpose="Validate if pakaging can not be installed">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-rtcore-tizen-tests/rtcore/Crosswalk_Manifest_Version_IdentifyingFourZero.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>
