#!/bin/bash

#Copyright (c) 2013 Intel Corporation.
#
#Redistribution and use in source and binary forms, with or without modification,
#are permitted provided that the following conditions are met:
#
#* Redistributions of works must retain the original copyright notice, this list
# of conditions and the following disclaimer.
#* Redistributions in binary form must reproduce the original copyright notice,
#  this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#* Neither the name of Intel Corporation nor the names of its contributors
#  may be used to endorse or promote products derived from this work without
#  specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED BY INTEL CORPORATION "AS IS"
#AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#ARE DISCLAIMED. IN NO EVENT SHALL INTEL CORPORATION BE LIABLE FOR ANY DIRECT,
#INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
#OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
#EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#Authors:
#       IVAN CHEN <yufeix.chen@intel.com>

function func_xwalkservice()
{
        export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/5000/dbus/user_bus_socket
        systemctl --user status xwalk.service > /dev/null
        pkgcmd -l > /tmp/res.txt
        cat /tmp/res.txt | grep "Application ID" >/dev/null
        if [ $? -ne 0  ];then
                echo "setting xwalk service mode fail"
                exit 1
        fi
}

function func_check_xwalkservice()
{
        pkgcmd -l &> /tmp/res.txt
        cat /tmp/res.txt | grep "Application ID" > /dev/null
        if [ $? -ne 0  ];then
                func_xwalkservice
        fi
}

function install_origin_xpk(){
        pkgcmd -i -t wgt -p  $1 &> /tmp/install -q
        cat /tmp/install | grep "DONE"
        if [[ $? -ne 0 ]]; then
                cat /tmp/install | grep "Already"
                if [[ $? -eq 0 ]]; then
                        uninstall_exist_xpk
                        pkgcmd -i -t wgt -p  $1 &> /tmp/install -q
                else
                        echo "The original xpk  install failure."  
                        exit 1
                fi
        fi
        # get app id
        get_app_id $2
}

function update_valid_xpk(){
        pkgcmd -i -t wgt -p $1 &> /tmp/install -q
        cat /tmp/install | grep "DONE"
        if [[ $? -eq 0 ]]; then
                echo "Update xpk, install successfully"
                else
                        echo "Update xpk,install failure"
                        exit 1
        fi

        get_version_name $4
        uninstall_xpk $4
        if [[ $version != $2 ]]; then
                echo "Fail, Update xpk, but the version is not updated."
                exit 1
        fi
        if [[ $name != $3 ]]; then
                echo "Fail, Update xpk, but the name is not updated."
                exit 1
        fi
}

function update_negative_xpk(){
        pkgcmd -i -t wgt -p $1 &> /tmp/install -q
        cat /tmp/install | grep "DONE"
        if [[ $? -ne 0 ]]; then
                echo "Pass, Update negative xpk, install failure"
        else
                echo "Fail, Update negative xpk,install successfully"
                exit 1
        fi

        get_version_name $4
        uninstall_xpk $4
        if [[ $version != $2 ]]; then
                echo "Fail, Update negative xpk, but the version is updated."
                exit 1
        fi
        if [[ $version == $3 ]]; then
                echo "Fail, Update negative xpk, but the name is updated."
                exit 1
        fi
}

function uninstall_xpk(){
#uninstall xpk
pkgcmd -u -n  $1 -q
}

function get_version_name(){

        version=`sqlite3 /home/app/.applications/dbspace/.app_info.db "select version from app_info where name like \"%$1%\";"`
        name=`sqlite3 /home/app/.applications/dbspace/.app_info.db "select name from app_info where name like \"%$1%\";"`
}

function get_app_id(){
        app_id_tmp=`cat /tmp/install | cut -d / -f 4`
        app_id=`sqlite3 /home/app/.applications/dbspace/.app_info.db "select x_slp_pkgid from app_info where name like \"%$1%\";"`
        echo "app_id=",$app_id
}

function uninstall_exist_xpk(){
        exist_id=`pkgcmd -l | grep "update_original_*" | awk '{print $4}'`
        [ -n $exist_id ] & pkgcmd -u -n  ${exist_id:1:-1}
        exist_id=`pkgcmd -l | grep "update_version_*" | awk '{print $4}'`
        [ -n $exist_id ] & pkgcmd -u -n  ${exist_id:1:-1}
}
