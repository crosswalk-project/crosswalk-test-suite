#!/bin/bash
#
# Copyright (C) 2010 Intel Corporation
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Author:
#        Yue, jianhui <jianhuix.a.yue@intel.com>

path=$(dirname $(dirname $0))
source $path/scripts/xwalk_common.sh

function func_install()
{
    PACKAGENAME="$path/$1"
    p_name=$1
    APP_NAME=${p_name%%.wgt}
    if [ $# != 1 ];then
      echo "Need to add the parameter"
      return 1
    fi
    xwalkctl --install $PACKAGENAME
    find_app $APP_NAME
    pkgnum=`echo "$pkgids"|wc -w`
    if [ $pkgnum -lt 1 ]; then
      echo "The installation is failed"
      return 1
    else
      echo "The widget is installed successfully"
      return 0
    fi
}

function func_uninstall()
{
    PACKAGENAME="$path/$1"
    p_name=$1
    APP_NAME=${p_name%%.wgt}
    if [ $# != 1 ];then
      echo "Need to add the parameter"
      return 1
    fi
    find_app $APP_NAME
    pkgnum=`echo "$pkgids"|wc -w`
    if [ $pkgnum -lt 1 ]; then
      echo "The widget is not installed"
      return 1
    fi
    uninstall_app $APP_NAME
    find_app $APP_NAME
    pkgnum=`echo "$pkgids"|wc -w`
    if [ $pkgnum -lt 1 ]; then
      echo "The widget is uninstalled successfully"
      return 0
    else
      echo "uninstall widget failed"
      return 1
    fi
}

function func_launch()
{
    PACKAGENAME="$path/$1"
    p_name=$1
    APP_NAME=${p_name%%.wgt}
    if [ $# != 1 ];then
      echo "Need to add the parameter"
      return 1
    fi
    find_app $APP_NAME
    launch_app $APP_NAME
    App_Status=`wrt-launcher -r $WIDGETNAME | grep "not running"`
    if [ -z $App_Status ];then
      echo "The widget is launched successfully"
      return 0
    else
      echo "The widget is not launched"
      return 1
    fi
}

function func_launch_other()
{
    PACKAGENAME="$path/$1"
    p_name=$1
    APP_NAME=${p_name%%.wgt}
    if [ $# != 1 ];then
      echo "Need to add the parameter"
      return 1
    fi
    APP_WIDGETNAME=`wrt-launcher -l|grep -w $APP_NAME|awk '{print $NF}'`
    wrt-launcher -s $APP_WIDGETNAME
    sleep 3
    if [ "$APP_NAME" = "lifecycle-launch-installed-app" ];then
        WIDGETNAME = "wrt3lhr012.LifecycleHideRunningApp"
        App_Status=`wrt-launcher -r $WIDGETNAME | grep -w "not running"`
    elif [ "$APP_NAME" = "lifecycle-launch-removed-app" ];then
        WIDGETNAME = "wrt3lhr012.LifecycleHideRunningApp"
        App_Status=`wrt-launcher -r $WIDGETNAME | grep -w "failed"`
    fi
    if [ -z $App_Status ];then
      echo "The widget is launched successfully"
      return 0
    else
      echo "The widget is not launched"
      return 1
    fi
}
