<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="W3C/HTML5 APIs" name="tct-webaudio-w3c-tests">
    <set name="WebAudio1" type="js">
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_default_value" priority="P2" purpose="Check that the default values of AnalyserNode's members as specified" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="fftSize" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_fftSize_exists" priority="P1" purpose="Check if AnalyserNode.fftSize attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="fftSize" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_fftSize_type" priority="P1" purpose="Check if the type of AnalyserNode.fftSize is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="fftSize" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_frequencyBinCount_exists" priority="P1" purpose="Check if AnalyserNode.frequencyBinCount attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="frequencyBinCount" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_frequencyBinCount_readonly" priority="P1" purpose="Check if AnalyserNode.frequencyBinCount attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="frequencyBinCount" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_frequencyBinCount_type" priority="P1" purpose="Check if the type of AnalyserNode.frequencyBinCount is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="frequencyBinCount" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_getByteFrequencyData_exists" priority="P1" purpose="Check if AnalyserNode.getByteFrequencyData method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getByteFrequencyData" element_type="method" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_getByteFrequencyData_type" priority="P1" purpose="Check if the type of AnalyserNode.getByteFrequencyData is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getByteFrequencyData" element_type="method" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_getByteTimeDomainData_exists" priority="P1" purpose="Check if AnalyserNode.getByteTimeDomainData method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getByteTimeDomainData" element_type="method" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_getByteTimeDomainData_type" priority="P1" purpose="Check if the type of AnalyserNode.getByteTimeDomainData is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getByteTimeDomainData" element_type="method" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_getFloatFrequencyData_exists" priority="P1" purpose="Check if AnalyserNode.getFloatFrequencyData method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getFloatFrequencyData" element_type="method" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_getFloatFrequencyData_type" priority="P1" purpose="Check if the type of AnalyserNode.getFloatFrequencyData is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getFloatFrequencyData" element_type="method" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_maxDecibels_exists" priority="P1" purpose="Check if AnalyserNode.maxDecibels attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="maxDecibels" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_maxDecibels_type" priority="P1" purpose="Check if the type of AnalyserNode.maxDecibels is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="maxDecibels" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_minDecibels_exists" priority="P1" purpose="Check if AnalyserNode.minDecibels attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="minDecibels" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_minDecibels_type" priority="P1" purpose="Check if the type of AnalyserNode.minDecibels attribute is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="minDecibels" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_smoothingTimeConstant_exists" priority="P1" purpose="Check if AnalyserNode.smoothingTimeConstant attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="smoothingTimeConstant" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_smoothingTimeConstant_type" priority="P1" purpose="Check if the type of AnalyserNode.smoothingTimeConstant is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="smoothingTimeConstant" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_duration_exists" priority="P1" purpose="Check if AudioBuffer.duration attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="duration" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_duration_readonly" priority="P1" purpose="Check if AudioBuffer.duration attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="duration" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_duration_type" priority="P1" purpose="Check if the type of AudioBuffer.duration is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="duration" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_getChannelData_exists" priority="P1" purpose="Check if AudioBuffer.getChannelData method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getChannelData" element_type="method" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_getChannelData_type" priority="P1" purpose="Check if the return type of AudioBuffer.getChannelData is Float32Array" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getChannelData" element_type="method" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_length_exists" priority="P1" purpose="Check if AudioBuffer.length attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="length" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_length_readonly" priority="P1" purpose="Check if AudioBuffer.length attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="length" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_length_type" priority="P1" purpose="Check if the type of AudioBuffer.length is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="length" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_numberOfChannels_exists" priority="P1" purpose="Check if AudioBuffer.numberOfChannels attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfChannels" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_numberOfChannels_readonly" priority="P1" purpose="Check if AudioBuffer.numberOfChannels attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfChannels" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_numberOfChannels_type" priority="P1" purpose="Check if the type of AudioBuffer.numberOfChannels is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfChannels" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_sampleRate_exists" priority="P1" purpose="Check if AudioBuffer.sampleRate attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="sampleRate" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_sampleRate_readonly" priority="P1" purpose="Check if AudioBuffer.sampleRate attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="sampleRate" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_sampleRate_type" priority="P1" purpose="Check if the type of AudioBuffer.sampleRate is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="sampleRate" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_buffer_exists" priority="P1" purpose="Check if AudioBufferSourceNode.buffer attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="buffer" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_buffer_type" priority="P1" purpose="Check if the type of AudioBufferSourceNode.buffer is AudioBuffer" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="buffer" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loop_exists" priority="P1" purpose="Check if AudioBufferSourceNode.loop attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loop" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loop_type" priority="P1" purpose="Check if the type of AudioBufferSourceNode.loop is boolean" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loop" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loopEnd_exists" priority="P1" purpose="Check if AudioBufferSourceNode.loopEnd attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loopEnd" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loopStart_exists" priority="P1" purpose="Check if AudioBufferSourceNode.loopStart attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loopStart" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_playbackRate_exists" priority="P1" purpose="Check if AudioBufferSourceNode.playbackRate attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="playbackRate" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_playbackRate_type" priority="P1" purpose="Check if the type of AudioBufferSourceNode.playbackRate is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="playbackRate" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_start_exists" priority="P1" purpose="Check if AudioBufferSourceNode.start method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="start" element_type="method" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_start_type" priority="P1" purpose="Check if the type of AudioBufferSourceNode.start is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="start" element_type="method" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_stop_exists" priority="P1" purpose="Check if AudioBufferSourceNode.stop method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="stop" element_type="method" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_stop_type" priority="P1" purpose="Check if the type of AudioBufferSourceNode.stop is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="stop" element_type="method" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createAnalyser_exists" priority="P1" purpose="Check if AudioContext.createAnalyser method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createAnalyser" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createAnalyser_type" priority="P1" purpose="Check if the type of AudioContext.createAnalyser is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createAnalyser" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBiquadFilter_exists" priority="P1" purpose="Check if AudioContext.createBiquadFilter method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createBiquadFilter" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBiquadFilter_type" priority="P1" purpose="Check if AudioContext.createBiquadFilter attribute is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createBiquadFilter" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBuffer_exists" priority="P1" purpose="Check if AudioContext.createBuffer method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createBuffer" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBuffer_type" priority="P1" purpose="Check if the type of AudioContext.createBuffer is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createBuffer" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBufferSource_exists" priority="P1" purpose="Check if AudioContext.createBufferSource method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createBufferSource" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBufferSource_type" priority="P1" purpose="Check if the type of AudioContext.createBufferSource is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createBufferSource" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createChannelMerger_exists" priority="P1" purpose="Check if AudioContext.createChannelMerger method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createChannelMerger" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createChannelMerger_type" priority="P1" purpose="Check if the type of AudioContext.createChannelMerger is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createChannelMerger" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createChannelSplitter_exists" priority="P1" purpose="Check if AudioContext.createChannelSplitter method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createChannelSplitter" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createChannelSplitter_type" priority="P1" purpose="Check if the type of AudioContext.createChannelSplitter is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createChannelSplitter" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createConvolver_exists" priority="P1" purpose="Check if AudioContext.createConvolver method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createConvolver" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createConvolver_type" priority="P1" purpose="Check if the type of AudioContext.createConvolver is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createConvolver" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createDelay_exists" priority="P1" purpose="Check if AudioContext.createDelay method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelay_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createDelay" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createDelay_type" priority="P1" purpose="Check if the type of AudioContext.createDelay is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelay_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createDelay" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createDynamicsCompressor_exists" priority="P1" purpose="Check if AudioContext.createDynamicsCompressor method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createDynamicsCompressor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createDynamicsCompressor_type" priority="P1" purpose="Check if the type of AudioContext.createDynamicsCompressor is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createDynamicsCompressor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createGain_exists" priority="P1" purpose="Check if AudioContext.createGain method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createGain" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createGain_type" priority="P1" purpose="Check if the type of AudioContext.createGain is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createGain" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createMediaElementSource_exists" priority="P1" purpose="Check if AudioContext.createMediaElementSource method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createMediaElementSource" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createMediaElementSource_type" priority="P1" purpose="Check if the type of AudioContext.createMediaElementSource is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createMediaElementSource" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createMediaStreamSource_exists" priority="P1" purpose="Check if AudioContext.createMediaStreamSource method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaStreamSource_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createMediaStreamSource" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createMediaStreamSource_type" priority="P1" purpose="Check if the type of AudioContext.createMediaStreamSource is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaStreamSource_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createMediaStreamSource" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="WebAudio2" type="js">
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createOscillator_exists" priority="P1" purpose="Check if AudioContext.createOscillator method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createOscillator" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createOscillator_type" priority="P1" purpose="Check if the type of AudioContext.createOscillator is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createOscillator" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createPanner_exists" priority="P1" purpose="Check if AudioContext.createPanner method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createPanner" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createPanner_type" priority="P1" purpose="Check if the type of AudioContext.createPanner is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createPanner" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_exists" priority="P1" purpose="Check if AudioContext.createScriptProcessor method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_type" priority="P1" purpose="Check if the type of AudioContext.createScriptProcessor is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createWaveShaper_exists" priority="P1" purpose="Check if AudioContext.createWaveShaper method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createWaveShaper" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createPeriodicWave_exists" priority="P1" purpose="Check if AudioContext.createPeriodicWave method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPeriodicWave_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createPeriodicWave" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#AudioContext-section</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createPeriodicWave_type" priority="P1" purpose="Check if the type of AudioContext.createPeriodicWave is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPeriodicWave_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createPeriodicWave" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#AudioContext-section</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_currentTime_exists" priority="P1" purpose="Check if AudioContext.currentTime attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="currentTime" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_currentTime_readonly" priority="P1" purpose="Check if AudioContext.currentTime attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="currentTime" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_currentTime_type" priority="P1" purpose="Check if the type of AudioContext.currentTime attribute is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="currentTime" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_decodeAudioData_exists" priority="P1" purpose="Check if AudioContext.decodeAudioData method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="decodeAudioData" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_decodeAudioData_type" priority="P1" purpose="Check if the type of AudioContext.decodeAudioData is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="decodeAudioData" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_decodeAudioData" priority="P1" purpose="Check if decodeAudioData method returns a Promise" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="sampleRate" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>http://webaudio.github.io/web-audio-api/#widl-BaseAudioContext-decodeAudioData-Promise-AudioBuffer--ArrayBuffer-audioData-DecodeSuccessCallback-successCallback-DecodeErrorCallback-errorCallback</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_destination_exists" priority="P1" purpose="Check if AudioContext.destination attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="destination" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_destination_readonly" priority="P1" purpose="Check if AudioContext.destination attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="destination" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_destination_type" priority="P1" purpose="Check if the type of AudioContext.destination is AudioDestinationNode" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="destination" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_listener_exists" priority="P1" purpose="Check if AudioContext.listener attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="listener" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_listener_readonly" priority="P1" purpose="Check if AudioContext.listener attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="listener" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_listener_type" priority="P1" purpose="Check if the type of AudioContext.listener is AudioListener" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="listener" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_sampleRate_exists" priority="P1" purpose="Check if AudioContext.sampleRate attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="sampleRate" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_sampleRate_readonly" priority="P1" purpose="Check if AudioContext.sampleRate attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="sampleRate" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_sampleRate_type" priority="P1" purpose="Check if the type of AudioContext.sampleRate is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="sampleRate" element_type="attribute" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createIIRFilter" priority="P1" purpose="Check that the attributes of IIRFilterNode" status="approved" type="compliance" subcase="3">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createIIRFilter.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createIIRFilter" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>http://webaudio.github.io/web-audio-api/#idl-def-IIRFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_dopplerFactor_exists" priority="P1" purpose="Check if AudioListener.dopplerFactor attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="dopplerFactor" element_type="attribute" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_dopplerFactor_type" priority="P1" purpose="Check if the type of AudioListener.dopplerFactor is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="dopplerFactor" element_type="attribute" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_setOrientation_exists" priority="P1" purpose="Check if AudioListener.setOrientation method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setOrientation" element_type="method" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_setOrientation_type" priority="P1" purpose="Check if the type of AudioListener.setOrientation is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setOrientation" element_type="method" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_setPosition_exists" priority="P1" purpose="Check if AudioListener.setPosition method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setPosition" element_type="method" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_setPosition_type" priority="P1" purpose="Check if the type of AudioListener.setPosition is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setPosition" element_type="method" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_setVelocity_exists" priority="P1" purpose="Check if AudioListener.setVelocity method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setVelocity" element_type="method" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_setVelocity_type" priority="P1" purpose="Check if the type of AudioListener.setVelocity is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setVelocity" element_type="method" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_speedOfSound_exists" priority="P1" purpose="Check if AudioListener.speedOfSound attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="speedOfSound" element_type="attribute" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_speedOfSound_type" priority="P1" purpose="Check if the type of AudioListener.speedOfSound is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="speedOfSound" element_type="attribute" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_connect_exists" priority="P1" purpose="Check if AudioNode.connect method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="connect" element_type="method" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_connect_type" priority="P1" purpose="Check if the type of AudioNode.connect is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="connect" element_type="method" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_context_exists" priority="P1" purpose="Check if AudioNode.context attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="context" element_type="attribute" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_context_readonly" priority="P1" purpose="Check if AudioNode.context attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="context" element_type="attribute" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_context_type" priority="P1" purpose="Check if the type of AudioNode.context is AudioContext" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="context" element_type="attribute" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_disconnect_exists" priority="P1" purpose="Check if AudioNode.disconnect method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="disconnect" element_type="method" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_disconnect_type" priority="P1" purpose="Check if the type of AudioNode.disconnect is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="disconnect" element_type="method" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_numberOfInputs_exists" priority="P1" purpose="Check if AudioNode.numberOfInputs attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfInputs" element_type="attribute" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_numberOfInputs_readonly" priority="P1" purpose="Check if AudioNode.numberOfInputs attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfInputs" element_type="attribute" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_numberOfInputs_type" priority="P1" purpose="Check if the type of AudioNode.numberOfInputs is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfInputs" element_type="attribute" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_numberOfOutputs_exists" priority="P1" purpose="Check if AudioNode.numberOfOutputs attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfOutputs" element_type="attribute" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_numberOfOutputs_readonly" priority="P1" purpose="Check if AudioNode.numberOfOutputs attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfOutputs" element_type="attribute" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_numberOfOutputs_type" priority="P1" purpose="Check if the type of AudioNode.numberOfOutputs is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfOutputs" element_type="attribute" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_cancelScheduledValues_exists" priority="P1" purpose="Check if AudioParam.cancelScheduledValues method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="cancelScheduledValues" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_cancelScheduledValues_type" priority="P1" purpose="Check if the type of AudioParam.cancelScheduledValues is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="cancelScheduledValues" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_defaultValue_exists" priority="P1" purpose="Check if AudioParam.defaultValue attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="defaultValue" element_type="attribute" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_defaultValue_readonly" priority="P1" purpose="Check if AudioParam.defaultValue attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="defaultValue" element_type="attribute" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_defaultValue_type" priority="P1" purpose="Check if the type of AudioParam.defaultValue is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="defaultValue" element_type="attribute" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_exponentialRampToValueAtTime_exists" priority="P1" purpose="Check if AudioParam.exponentialRampToValueAtTime method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="exponentialRampToValueAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_exponentialRampToValueAtTime_type" priority="P1" purpose="Check if the type of AudioParam.exponentialRampToValueAtTime is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="exponentialRampToValueAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_linearRampToValueAtTime_exists" priority="P1" purpose="Check if AudioParam.linearRampToValueAtTime method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="linearRampToValueAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_linearRampToValueAtTime_type" priority="P1" purpose="Check if the type of AudioParam.linearRampToValueAtTime is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="linearRampToValueAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_setTargetAtTime_exists" priority="P1" purpose="Check if AudioParam.setTargetAtTime method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setTargetAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_setTargetAtTime_type" priority="P1" purpose="Check if the type of AudioParam.setTargetAtTime is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setTargetAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioprocessingevent_inputBuffer_exists" priority="P1" purpose="Check if AudioProcessingEvent.inputBuffer attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="inputBuffer" element_type="attribute" interface="AudioProcessingEvent" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audioprocessingevent-interface---deprecated</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioprocessingevent_inputBuffer_readonly" priority="P1" purpose="Check if AudioProcessingEvent.inputBuffer attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="inputBuffer" element_type="attribute" interface="AudioProcessingEvent" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audioprocessingevent-interface---deprecated</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioprocessingevent_inputBuffer_type" priority="P1" purpose="Check if the type of AudioProcessingEvent.inputBuffer is AudioBuffer" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="inputBuffer" element_type="attribute" interface="AudioProcessingEvent" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audioprocessingevent-interface---deprecated</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioprocessingevent_outputBuffer_exists" priority="P1" purpose="Check if AudioProcessingEvent.outputBuffer attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="outputBuffer" element_type="attribute" interface="AudioProcessingEvent" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audioprocessingevent-interface---deprecated</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioprocessingevent_outputBuffer_readonly" priority="P1" purpose="Check if AudioProcessingEvent.outputBuffer attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="outputBuffer" element_type="attribute" interface="AudioProcessingEvent" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audioprocessingevent-interface---deprecated</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioprocessingevent_outputBuffer_type" priority="P1" purpose="Check if the type of AudioProcessingEvent.outputBuffer is AudioBuffer" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="outputBuffer" element_type="attribute" interface="AudioProcessingEvent" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audioprocessingevent-interface---deprecated</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_frequency_exists" priority="P1" purpose="Check if BiquadFilterNode.frequency attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="frequency" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_frequency_readonly" priority="P1" purpose="Check if BiquadFilterNode.frequency attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="frequency" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_frequency_type" priority="P1" purpose="Check if the type of BiquadFilterNode.frequency is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="frequency" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_gain_exists" priority="P1" purpose="Check if BiquadFilterNode.gain attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="gain" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_gain_readonly" priority="P1" purpose="Check if BiquadFilterNode.gain attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="gain" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_gain_type" priority="P1" purpose="Check if the type of BiquadFilterNode.gain is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="gain" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_getFrequencyResponse_exists" priority="P1" purpose="Check if BiquadFilterNode.getFrequencyResponse method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getFrequencyResponse" element_type="method" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_getFrequencyResponse_type" priority="P1" purpose="Check if the type of BiquadFilterNode.getFrequencyResponse is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getFrequencyResponse" element_type="method" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_Q_exists" priority="P1" purpose="Check if BiquadFilterNode.Q attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="Q" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_Q_readonly" priority="P1" purpose="Check if BiquadFilterNode.Q attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="Q" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_Q_type" priority="P1" purpose="Check if the type of BiquadFilterNode.Q is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="Q" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="WebAudio3" type="js">
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_exists" priority="P1" purpose="Check if BiquadFilterNode.type attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="type" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_type" priority="P1" purpose="Check if the type of BiquadFilterNode.type is string" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="type" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="convolvernode_buffer_exists" priority="P1" purpose="Check if ConvolverNode.buffer attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="buffer" element_type="attribute" interface="ConvolverNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ConvolverNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="convolvernode_buffer_type" priority="P1" purpose="Check if the type of ConvolverNode.buffer is AudioBuffer" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="buffer" element_type="attribute" interface="ConvolverNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ConvolverNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="convolvernode_normalize_exists" priority="P1" purpose="Check if ConvolverNode.normalize attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="normalize" element_type="attribute" interface="ConvolverNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ConvolverNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="convolvernode_normalize_type" priority="P1" purpose="Check if the type of ConvolverNode.normalize is boolean" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="normalize" element_type="attribute" interface="ConvolverNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ConvolverNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="delaynode_delayTime_exists" priority="P1" purpose="Check if DelayNode.delayTime attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="delayTime" element_type="attribute" interface="DelayNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DelayNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="delaynode_delayTime_type" priority="P1" purpose="Check if the type of DelayNode.delayTime is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="delayTime" element_type="attribute" interface="DelayNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DelayNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_attack_exists" priority="P1" purpose="Check if DynamicsCompressorNode.attack attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="attack" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_attack_readonly" priority="P1" purpose="Check if DynamicsCompressorNode.attack attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="attack" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_attack_type" priority="P1" purpose="Check if the type of DynamicsCompressorNode.attack is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="attack" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_knee_exists" priority="P1" purpose="Check if DynamicsCompressorNode.knee attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="knee" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_knee_readonly" priority="P1" purpose="Check if DynamicsCompressorNode.knee attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="knee" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_knee_type" priority="P1" purpose="Check if the type of DynamicsCompressorNode.knee is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="knee" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_ratio_exists" priority="P1" purpose="Check if DynamicsCompressorNode.ratio attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="ratio" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_ratio_readonly" priority="P1" purpose="Check if DynamicsCompressorNode.ratio attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="ratio" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_ratio_type" priority="P1" purpose="Check if the type of DynamicsCompressorNode.ratio is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="ratio" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_reduction_exists" priority="P1" purpose="Check if DynamicsCompressorNode.reduction attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="reduction" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_reduction_readonly" priority="P1" purpose="Check if DynamicsCompressorNode.reduction attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="reduction" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_reduction_type" priority="P1" purpose="Check if the type of DynamicsCompressorNode.reduction is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="reduction" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_release_exists" priority="P1" purpose="Check if DynamicsCompressorNode.release attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="release" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_release_readonly" priority="P1" purpose="Check if DynamicsCompressorNode.release attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="release" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_release_type" priority="P1" purpose="Check if the type of DynamicsCompressorNode.release is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="release" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_threshold_exists" priority="P1" purpose="Check if DynamicsCompressorNode.threshold attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="threshold" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_threshold_readonly" priority="P1" purpose="Check if DynamicsCompressorNode.threshold attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="threshold" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="dynamicscompressornode_threshold_type" priority="P1" purpose="Check if the type of DynamicsCompressorNode.threshold is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="threshold" element_type="attribute" interface="DynamicsCompressorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DynamicsCompressorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="gainnode_gain_exists" priority="P1" purpose="Check if GainNode.gain attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="gain" element_type="attribute" interface="GainNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-GainNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="gainnode_gain_readonly" priority="P1" purpose="Check if GainNode.gain attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="gain" element_type="attribute" interface="GainNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-GainNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="gainnode_gain_type" priority="P1" purpose="Check if the type of GainNode.gain is object" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="gain" element_type="attribute" interface="GainNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-GainNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="offlineaudiocontext_oncomplete_exists" priority="P1" purpose="Check if OfflineAudioContext.oncomplete methodexists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_oncomplete_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="oncomplete" element_type="attribute" interface="OfflineAudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OfflineAudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="offlineaudiocontext_startRendering_exists" priority="P1" purpose="Check if OfflineAudioContext.startRendering method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_startRendering_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="startRendering" element_type="method" interface="OfflineAudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OfflineAudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="offlineaudiocontext_length_exists" priority="P1" purpose="Check if OfflineAudioContext.length attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_length_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="length" element_type="method" interface="OfflineAudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OfflineAudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="offlineaudiocontext_length" priority="P1" purpose="Check if OfflineAudioContext.length is readonly and same as the value in the constructor" status="approved" type="compliance" subcase="2">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_length.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="length" element_type="method" interface="OfflineAudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OfflineAudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="offlineaudiocontext_suspend_and_resume" priority="P1" purpose="Check if an audio context can be suspended and resumed" status="approved" type="compliance" subcase="4">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_suspend_and_resume.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="suspend" element_type="method" interface="OfflineAudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OfflineAudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_detune_exists" priority="P1" purpose="Check if OscillatorNode.detune attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="detune" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_detune_readonly" priority="P1" purpose="Check if OscillatorNode.detune attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="detune" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_detune_type" priority="P1" purpose="Check if the type of OscillatorNode.detune is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="detune" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_frequency_exists" priority="P1" purpose="Check if OscillatorNode.frequency attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="frequency" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_frequency_readonly" priority="P1" purpose="Check if OscillatorNode.frequency attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="frequency" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_frequency_type" priority="P1" purpose="Check if the type of OscillatorNode.frequency is AudioParam" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="frequency" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_setPeriodicWave_base" priority="P1" purpose="Check if OscillatorNode.setPeriodicWave method executes well with a PeriodicWave argument" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setPeriodicWave_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="playbackState" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_setPeriodicWave_type" priority="P1" purpose="Check if the type of OscillatorNode.setPeriodicWave is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setPeriodicWave_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="playbackState" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_start_0" priority="P1" purpose="Check if OscillatorNode.start method executes immediately" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_0.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="playbackState" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_start_after_stop" priority="P1" purpose="Check if an exception throws when the method of OscillatorNode.start executes after OscillatorNode.stop" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_after_stop.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="PLAYING_STATE" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_start_base" priority="P1" purpose="Check if OscillatorNode.start method executes well with a double type argument" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="PLAYING_STATE" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_start_type" priority="P1" purpose="Check if the type of OscillatorNode.start is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="SCHEDULED_STATE" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_stop_0" priority="P1" purpose="Check if OscillatorNode.stop method executes immediately" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_0.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="SCHEDULED_STATE" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_stop_exists" priority="P1" purpose="Check if OscillatorNode.stop method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="stop" element_type="method" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_stop_type" priority="P1" purpose="Check if an exception throws when the methods of OscillatorNode.stop and OscillatorNode.start execute at the same time" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="stop" element_type="method" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_type_exists" priority="P1" purpose="Check if OscillatorNode.type attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="type" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_type_type" priority="P1" purpose="Check if the type of OscillatorNode.type is string" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="type" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_coneInnerAngle_exists" priority="P1" purpose="Check if PannerNode.coneInnerAngle attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="coneInnerAngle" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_coneInnerAngle_type" priority="P1" purpose="Check if the type of PannerNode.coneInnerAngle is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="coneInnerAngle" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_coneOuterAngle_exists" priority="P1" purpose="Check if PannerNode.coneOuterAngle attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="coneOuterAngle" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_coneOuterAngle_type" priority="P1" purpose="Check if the type of PannerNode.coneOuterAngle is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="coneOuterAngle" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_coneOuterGain_exists" priority="P1" purpose="Check if PannerNode.coneOuterGain attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="coneOuterGain" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_coneOuterGain_type" priority="P1" purpose="Check if the type of PannerNode.coneOuterGain is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="coneOuterGain" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_maxDistance_type" priority="P1" purpose="Check if the type of PannerNode.maxDistance is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="maxDistance" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_maxDistance_value" priority="P1" purpose="Check if the type of PannerNode.maxDistance is float" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="maxDistance" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_panningModel_exists" priority="P1" purpose="Check if PannerNode.panningModel attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="panningModel" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_refDistance_type" priority="P1" purpose="Check if the type of PannerNode.refDistance is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="refDistance" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_refDistance_value" priority="P1" purpose="Check if the type of PannerNode.refDistance is float" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="refDistance" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_rolloffFactor_type" priority="P1" purpose="Check if the type of PannerNode.rolloffFactor is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="rolloffFactor" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_rolloffFactor_value" priority="P1" purpose="Check if the type of PannerNode.rolloffFactor is float" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="rolloffFactor" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_setOrientation_exists" priority="P1" purpose="Check if PannerNode.setOrientation method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setOrientation" element_type="method" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_setOrientation_type" priority="P1" purpose="Check if the type of PannerNode.setOrientation is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setOrientation" element_type="method" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_setPosition_base" priority="P1" purpose="Check if PannerNode.setPosition method can change the position of a audio source" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setPosition" element_type="method" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_setPosition_exists" priority="P1" purpose="Check if PannerNode.setPosition method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setPosition" element_type="method" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_setPosition_type" priority="P1" purpose="Check if the type of PannerNode.setPosition is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setPosition" element_type="method" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_setVelocity_type" priority="P1" purpose="Check if the type of PannerNode.setVelocity is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setVelocity" element_type="method" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="scriptprocessornode_bufferSize_exists" priority="P1" purpose="Check if ScriptProcessorNode.bufferSize attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="bufferSize" element_type="attribute" interface="ScriptProcessorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ScriptProcessorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="scriptprocessornode_bufferSize_readonly" priority="P1" purpose="Check if ScriptProcessorNode.bufferSize attribute is readonly" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="bufferSize" element_type="attribute" interface="ScriptProcessorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ScriptProcessorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="scriptprocessornode_bufferSize_value" priority="P1" purpose="Check if the type of ScriptProcessorNode.bufferSize is long" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="bufferSize" element_type="attribute" interface="ScriptProcessorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ScriptProcessorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="scriptprocessornode_onaudioprocess_base" priority="P1" purpose="Check if ScriptProcessorNode.onaudioprocess method can receive the processing event" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_onaudioprocess_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="onaudioprocess" element_type="attribute" interface="ScriptProcessorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ScriptProcessorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="waveshapernode_curve_exists" priority="P1" purpose="Check if WaveShaperNode.curve attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="curve" element_type="attribute" interface="WaveShaperNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#WaveShaperNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="waveshapernode_curve_type" priority="P1" purpose="Check if the type of WaveShaperNode.curve is Float32Array" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="curve" element_type="attribute" interface="WaveShaperNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#WaveShaperNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_setValueAtTime_exists" priority="P1" purpose="Check if AudioParam.setValueAtTime method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setValueAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_setValueAtTime_type" priority="P1" purpose="Check if the type of AudioParam.setValueAtTime is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setValueAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_setValueCurveAtTime_exists" priority="P1" purpose="Check if AudioParam.setValueCurveAtTime method exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setValueCurveAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_setValueCurveAtTime_type" priority="P1" purpose="Check if the type of AudioParam.setValueCurveAtTime is function" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setValueCurveAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_value_exists" priority="P1" purpose="Check if AudioParam.value attribute exists" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="value" element_type="attribute" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_value_type" priority="P1" purpose="Check if the type of AudioParam.value is number" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="value" element_type="attribute" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="WebAudio4" type="js">
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="gain-node-test" onload_delay="15" priority="P2" purpose="Check that GainNode is properly scaling the gain" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-test.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="gain" element_type="attribute" interface="GainNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-GainNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="WebAudio5" type="js">
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_frequencyBinCount_value" priority="P3" purpose="Check if AnalyserNode.frequencyBinCount attribute value is half the fftSize" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.frequencyBinCount attribute value is half the fftSize</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AnalyserNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement>FrequencyBinCount Half the FFT size</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_start_after_stop" priority="P3" purpose="Check if an exception thrown when AudioBufferSourceNode.start called after AudioBufferSourceNode.stop" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an exception thrown when AudioBufferSourceNode.start called after AudioBufferSourceNode.stop</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_after_stop.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBuffer_three_numberOfChannels_upper" priority="P3" purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the numberOfChannels are out-of-bounds" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBuffer method with three param,thrown exception if the numberOfChannels are out-of-bounds</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_numberOfChannels_upper.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioContext" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBuffer_three_sampleRate_lower" priority="P3" purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 22050" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 22050</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_sampleRate_lower.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioContext" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBuffer_three_sampleRate_upper" priority="P3" purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 96000" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 96000</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_sampleRate_upper.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioContext" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_exception" priority="P3" purpose="Check if AudioContext.createScriptProcessor method,throw exception if buffersize param not is buffersize list value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,throw exception if buffersize param not is buffersize list value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioContext" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createPeriodicWave_exception" priority="P3" purpose="Check if AudioContext.createPeriodicWave method,throw exception if real and imag param set exception type" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createPeriodicWave method,throw exception if real and imag param set exception type</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPeriodicWave_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioContext" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiodestinationnode_channelCount_upper" priority="P3" purpose="Check if AudioDestinationNode.channelCount attribute,throw exception if AudioContext.channelCount set greater than maxChannelCount" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set greater than maxNumberOfChannels</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_channelCount_upper.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioDestinationNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioDestinationNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiodestinationnode_channelCount_zero" priority="P3" purpose="Check if AudioDestinationNode.channelCount attribute,throw exception if AudioContext.channelCount set 0" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.channelCount set 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_channelCount_zero.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioDestinationNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioDestinationNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_connect_input_exception" priority="P3" purpose="Check if AudioNode.connect method,throw exception if input param set out-of-bound value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.connect method,throw exception if input param set out-of-bound value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_input_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_connect_output_exception" priority="P3" purpose="Check if AudioNode.connect method,throw exception if output param setout-of-bound value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.connect method,throw exception if output param setout-of-bound value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_output_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_disconnect_exception" priority="P3" purpose="Check if AudioNode.disconnect method,throw exception if output param set out-of-bound value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.disconnect method,throw exception if output param set out-of-bound value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="AudioNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_allvalues" priority="P3" purpose="Check if BiquadFilterNode.type attribute may directly be set to one of BiquadFilterType values" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode.type attribute may directly be set to one of BiquadFilterType values</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_allvalues.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>Each BiquadFilterNode can be configured as one of a number of common filter types as shown in the IDL below</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_type_allvalues" priority="P3" purpose="Check if OscillatorNode.type attribute value is set to 'custom' value after the setWaveTable() method be used" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.type attribute value is set to 'custom' value after the setWaveTable() method be used</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_allvalues.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="OscillatorNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement>It may directly be set to any of the type constant values except for CUSTOM</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_type_invalid_value" priority="P3" purpose="Check if OscillatorNode.type attribute can't be set to 'custom' value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.type attribute can't be set to 'custom' value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_invalid_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="OscillatorNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>http://webaudio.github.io/web-audio-api/#the-oscillatornode-interface</spec_url>
            <spec_statement>It may directly be set to any of the type constant values except for CUSTOM</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_type_setPeriodicWave_value" priority="P3" purpose="Check if OscillatorNode.type attribute may directly be set to any of the OscillatorType values except for 'custom'" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.type attribute may directly be set to any of the OscillatorType values except for 'custom'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_setPeriodicWave_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="OscillatorNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement>The setPeriodicWave() method can be used to set a custom waveform, which results in this attribute being set to CUSTOM</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="waveshapernode_curve_greater" priority="P3" purpose="Check if WaveShaperNode.curve value greater than +1 will correspond to the last value in the curve array" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if WaveShaperNode.curve value greater than +1 will correspond to the last value in the curve array</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_greater.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="WaveShaperNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#WaveShaperNode</spec_url>
            <spec_statement>Any sample value less greater than +1 will correspond to the last value in the curve array</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="waveshapernode_curve_less" priority="P3" purpose="Check if WaveShaperNode.curve value less than -1 will correspond to the first value in the curve array" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if WaveShaperNode.curve value less than -1 will correspond to the first value in the curve array</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_less.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="WaveShaperNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#WaveShaperNode</spec_url>
            <spec_statement>Any sample value less than -1 will correspond to the first value in the curve array</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="waveshapernode_curve_zero" priority="P3" purpose="Check if WaveShaperNode.curve with a signal level of zero corresponding to the center value of the curve array" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if WaveShaperNode.curve with a signal level of zero corresponding to the center value of the curve array</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_zero.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="WaveShaperNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#WaveShaperNode</spec_url>
            <spec_statement>Each input sample within this range will index into the shaping curve with a signal level of zero corresponding to the center value of the curve array</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_allpass_phase" priority="P3" purpose="Check if BiquadFilterNode allpass filter changes the phase relationship between the various frequencies" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode allpass filter changes the phase relationship between the various frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_allpass_phase.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>An allpass filter allows all frequencies through, but changes the phase relationship between the various frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_bandpass_above" priority="P3" purpose="Check if BiquadFilterNode bandpass filter attenuates the frequencies above the frequency range" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode bandpass filter attenuates the frequencies above the frequency range</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_above.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>A bandpass filter allows a range of frequencies to pass through and attenuates the frequencies below and above this frequency range</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_bandpass_below" priority="P3" purpose="Check if BiquadFilterNode bandpass filter attenuates the frequencies below the frequency range" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode bandpass filter attenuates the frequencies below the frequency range</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_below.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>A bandpass filter allows a range of frequencies to pass through and attenuates the frequencies below and above this frequency range</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_bandpass_center" priority="P3" purpose="Check if BiquadFilterNode bandpass filter allows a range of frequencies to pass through" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode bandpass filter allows a range of frequencies to pass through</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_center.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>A bandpass filter allows a range of frequencies to pass through and attenuates the frequencies below and above this frequency range</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_highpass_above" priority="P3" purpose="Check if BiquadFilterNode highpass filter allows frequencies above the cutoff frequency to pass through" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode highpass filter allows frequencies above the cutoff frequency to pass through</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highpass_above.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>Frequencies above the cutoff frequency are passed through</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_highpass_below" priority="P3" purpose="Check if BiquadFilterNode highpass filter attenuates frequencies below the cutoff" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode highpass filter attenuates frequencies below the cutoff</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highpass_below.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>Frequencies above the cutoff frequency are passed through, but frequencies below the cutoff are attenuated</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_highshelf_attenuation" priority="P3" purpose="Check if BiquadFilterNode highshelf filter adds a attenuation to the higher frequencies" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode highshelf filter adds a attenuation to the higher frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highshelf_attenuation.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>Frequency    The lower limit of the frequences where the boost (or attenuation) is applied</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_highshelf_boost" priority="P3" purpose="Check if BiquadFilterNode highshelf filter adds a boost to the higher frequencies" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode highshelf filter adds a boost to the higher frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highshelf_boost.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>The highshelf filter is the opposite of the lowshelf filter and allows all frequencies through, but adds a boost to the higher frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_lowpass_above" priority="P3" purpose="Check if BiquadFilterNode lowpass filter attenuates frequencies above the cutoff" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode lowpass filter attenuates frequencies above the cutoff</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowpass_above.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>A lowpass filter allows frequencies below the cutoff frequency to pass through and attenuates frequencies above the cutoff</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_lowpass_below" priority="P3" purpose="Check if BiquadFilterNode lowpass filter allows frequencies below the cutoff frequency to pass through" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode lowpass filter allows frequencies below the cutoff frequency to pass through</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowpass_below.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>A lowpass filter allows frequencies below the cutoff frequency to pass through and attenuates frequencies above the cutoff</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_lowshelf_attenuation" priority="P3" purpose="Check if BiquadFilterNode lowshelf filter adds a attenuation to the lower frequencies" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode lowshelf filter adds a attenuation to the lower frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowshelf_attenuation.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>The lowshelf filter allows all frequencies through, but adds a boost (or attenuation) to the lower frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_lowshelf_boost" priority="P3" purpose="Check if BiquadFilterNode lowshelf filter adds a boost to the lower frequencies" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode lowshelf filter adds a boost to the lower frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowshelf_boost.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>The lowshelf filter allows all frequencies through, but adds a boost (or attenuation) to the lower frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_notch_all" priority="P3" purpose="Check if BiquadFilterNode notch filter allows all frequencies through" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode notch filter allows all frequencies through</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_notch_all.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>The notch filter (also known as a band-stop or band-rejection filter) is the opposite of a bandpass filter. It allows all frequencies through, except for a set of frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_notch_except" priority="P3" purpose="Check if BiquadFilterNode notch filter allows all frequencies through except for the notch applied" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode notch filter allows all frequencies through except for the notch applied</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_notch_except.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>The notch filter (also known as a band-stop or band-rejection filter) is the opposite of a bandpass filter. It allows all frequencies through, except for a set of frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_peaking_attenuation" priority="P3" purpose="Check if BiquadFilterNode peaking filter adds a attenuation to a range of frequencies" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode peaking filter adds a attenuation to a range of frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_peaking_attenuation.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>The peaking filter allows all frequencies through, but adds a boost (or attenuation) to a range of frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_peaking_boost" priority="P3" purpose="Check if BiquadFilterNode peaking filter adds a boost to a range of frequencies" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode peaking filter adds a boost to a range of frequencies</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_peaking_boost.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" interface="BiquadFilterNode" section="Media" specification="Web Audio API" usage="true" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement>The peaking filter allows all frequencies through, but adds a boost (or attenuation) to a range of frequencies</spec_statement>
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_fftSize_value" priority="P2" purpose="Check if AnalyserNode.fftSize attribute value is number" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.fftSize attribute value is number</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="fftSize" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_getByteFrequencyData_base" priority="P2" purpose="Check if AnalyserNode.getByteFrequencyData method executes well with Uint8Array parameter" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.getByteFrequencyData method executes well with Uint8Array parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getByteFrequencyData" element_type="method" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_getByteTimeDomainData_base" priority="P2" purpose="Check if AnalyserNode.getByteTimeDomainData method executes well with Uint8Array parameter" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.getByteTimeDomainData method executes well with Uint8Array parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getByteTimeDomainData" element_type="method" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_getFloatFrequencyData_base" priority="P2" purpose="Check if AnalyserNode.getFloatFrequencyData method executes well with Float32Array parameter" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.getFloatFrequencyData method executes well with Float32Array parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getFloatFrequencyData" element_type="method" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_maxDecibels_value" priority="P2" purpose="Check if AnalyserNode.maxDecibels attribute value is float" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.maxDecibels attribute value is float</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="maxDecibels" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_minDecibels_value" priority="P2" purpose="Check if AnalyserNode.minDecibels attribute value is float" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.minDecibels attribute value is float</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="minDecibels" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="analysernode_smoothingTimeConstant_value" priority="P2" purpose="Check if AnalyserNode.smoothingTimeConstant attribute value is float" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AnalyserNode.smoothingTimeConstant attribute value is float</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="smoothingTimeConstant" element_type="attribute" interface="AnalyserNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_getChannelData_base" priority="P2" purpose="Check if the AudioBuffer.getChannelData returns a Float32Arrays value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBuffer.getChannelData returns a Float32Arrays value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getChannelData" element_type="method" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_getChannelData_exception" priority="P2" purpose="Check if an exception will be thrown when the parameter is bigger than numberOfChannels" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an exception will be thrown when the parameter is bigger than numberOfChannels</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_exception.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getChannelData" element_type="method" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_length_value" priority="P2" purpose="Check if the AudioBuffer.length is long value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBuffer.length is long value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="length" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_numberOfChannels_value" priority="P2" purpose="Check if the AudioBuffer.numberOfChannels is integer value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBuffer.numberOfChannels is integer value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfChannels" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffer_sampleRate_value" priority="P2" purpose="Check if AudioBuffer.sampleRate attribute is float value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBuffer.sampleRate attribute is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="sampleRate" element_type="attribute" interface="AudioBuffer" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBuffer</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_buffer_value" priority="P2" purpose="Check if the AudioBufferSourceNode.buffer is not null when set it a new AudioBufferSourceNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBufferSourceNode.buffer is not null when set it a new AudioBufferSourceNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="buffer" element_type="attribute" interface="AudioBuffersourcenode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loop_default_value" priority="P2" purpose="Check if the AudioBufferSourceNode.loop default value is false" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBufferSourceNode.loop default value is false</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loop" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loop_value" priority="P2" purpose="Check if the AudioBufferSourceNode.loop is boolean value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioBufferSourceNode.loop is boolean value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loop" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loopEnd_default_value" priority="P2" purpose="Check if AudioBufferSourceNode.loopEnd attribute default value is 0" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopEnd attribute default value is 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loopEnd" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loopEnd_type" priority="P2" purpose="Check if AudioBufferSourceNode.loopEnd attribute is type of number" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopEnd attribute is type of number</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loopEnd" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loopEnd_value" priority="P2" purpose="Check if AudioBufferSourceNode.loopEnd attribute set value 0.5" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopEnd attribute set value 0.5</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loopEnd" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loopStart_default_value" priority="P2" purpose="Check if AudioBufferSourceNode.loopStart attribute default value is 0" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopStart attribute default value is 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loopStart" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loopStart_type" priority="P2" purpose="Check if AudioBufferSourceNode.loopStart attribute is type of number" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopStart attribute is type of number</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loopStart" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_loopStart_value" priority="P2" purpose="Check if AudioBufferSourceNode.loopStart attribute set value 0.5" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.loopStart attribute set value 0.5</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="loopStart" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_playbackRate_default_value" priority="P2" purpose="Check if AudioBufferSourceNode.playbackRate.value default value is 1" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioBufferSourceNode.playbackRate default value is 1</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="playbackRate" element_type="attribute" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_start_base" priority="P2" purpose="Check if an audio source plays when AudioBufferSourceNode.start method called" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an audio source plays when AudioBufferSourceNode.start method called</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="start" element_type="method" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiobuffersourcenode_stop_base" priority="P2" purpose="Check if an audio source ends when AudioBufferSourceNode.stop method called" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an audio source ends when AudioBufferSourceNode.stop method called</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="stop" element_type="method" interface="AudioBufferSourceNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-AudioBufferSourceNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createAnalyser_base" priority="P2" purpose="Check if AudioContext.createAnalyser method,return value type of is RealtimeAnalyserNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createAnalyser method,return value type of is RealtimeAnalyserNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createAnalyser" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createAnalyser_return_value" priority="P2" purpose="Check that AudioContext.createAnalyser() returns an instance of AnalyserNode" status="approved" type="compliance">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_return_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createAnalyser" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>http://webaudio.github.io/web-audio-api/#widl-AudioContext-createAnalyser-AnalyserNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBiquadFilter_base" priority="P2" purpose="Check if AudioContext.createBiquadFilter method return value type of is BiquadFilterNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBiquadFilter method return value type of is BiquadFilterNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createBiquadFilter" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBuffer_three_base" priority="P2" purpose="Check if AudioContext.createBuffer method with three param basic usage,return value type of is AudioBuffer" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBuffer method with three param basic usage,return value type of is AudioBuffer</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createBuffer" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createBufferSource_base" priority="P2" purpose="Check if AudioContext.createBufferSource,return value type of is AudioBufferSourceNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createBufferSource,return value type of is AudioBufferSourceNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createBufferSource" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createChannelMerger_base" priority="P2" purpose="Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createChannelMerger" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createChannelMerger_no_argument" priority="P2" purpose="Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode if no set numberOfOutputs param" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode if no set numberOfOutputs param</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_no_argument.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createChannelMerger" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createChannelSplitter_base" priority="P2" purpose="Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createChannelSplitter" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createChannelSplitter_no_argument" priority="P2" purpose="Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode if no set numberOfOutputs param" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode if no set numberOfOutputs param</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_no_argument.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createChannelSplitter" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createConvolver_base" priority="P2" purpose="Check if AudioContext.createConvolver method return value type of is ConvolverNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createConvolver method return value type of is ConvolverNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createConvolver" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createDynamicsCompressor_base" priority="P2" purpose="Check if AudioContext.createDynamicsCompressor method return value type of is DynamicsCompressorNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createDynamicsCompressor method return value type of is DynamicsCompressorNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createDynamicsCompressor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createGain_base" priority="P2" purpose="Check if AudioContext.createGain method,return value type of is GainNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createGain method,return value type of is GainNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createGain" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createMediaElementSource_base" priority="P2" purpose="Check if AudioContext.createMediaElementSource method,return value type of is MediaElementAudioSourceNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createMediaElementSource method,return value type of is MediaElementAudioSourceNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createMediaElementSource" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createOscillator_base" priority="P2" purpose="Check if AudioContext.createOscillator method return value type of is OscillatorNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createOscillator method return value type of is OscillatorNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createOscillator" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createPanner_base" priority="P2" purpose="Check if AudioContext.createPanner method return value type of is PannerNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createPanner method return value type of is PannerNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createPanner" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_base" priority="P2" purpose="Check if AudioContext.createScriptProcessor method,return value type of is ScriptProcessorNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,return value type of is ScriptProcessorNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_1024" priority="P2" purpose="Check if AudioContext.createScriptProcessor method,JavaScriptAudioNode.bufferSize is 1024 if bufferSize put 1024" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,JavaScriptAudioNode.bufferSize is 1024 if bufferSize put 1024</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_1024.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_16384" priority="P2" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 16384 if bufferSize put 16384" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 16384 if bufferSize put 16384</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_16384.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_2048" priority="P2" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 2048 if bufferSize put 2048" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 2048 if bufferSize put 2048</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_2048.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_256" priority="P2" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 256 if bufferSize put 256" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 256 if bufferSize put 256</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_256.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_4096" priority="P2" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 4096 if bufferSize put 4096" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 4096 if bufferSize put 4096</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_4096.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_512" priority="P2" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 512 if bufferSize put 512" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 512 if bufferSize put 512</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_512.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_8192" priority="P2" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 8192 if bufferSize put 8192" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 8192 if bufferSize put 8192</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_8192.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createScriptProcessor_three_parameters" priority="P2" purpose="Check if the return type of AudioContext.createScriptProcessor with three paramenters is ScriptProcessorNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the return type of AudioContext.createScriptProcessor with three paramenters is ScriptProcessorNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_three_parameters.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createScriptProcessor" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createWaveShaper_base" priority="P2" purpose="Check if AudioContext.createWaveShaper method,return value type of is WaveShaperNode" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createWaveShaper method,return value type of is WaveShaperNode</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createWaveShaper" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_createWaveShaper_type" priority="P2" purpose="Check if AudioContext.createWaveShaper is of type method" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.createWaveShaper is of type method</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="createWaveShaper" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiocontext_decodeAudioData_base" priority="P2" purpose="Check if AudioContext.decodeAudioData method, callback argument equals AudioBuffer if AudioContext.decodeAudioData decode success" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioContext.decodeAudioData method, callback argument equals AudioBuffer if AudioContext.decodeAudioData decode success</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="decodeAudioData" element_type="method" interface="AudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiodestinationnode_channelCount_base" priority="P2" purpose="Check if AudioDestinationNode.channelCount attribute set maxChannelCount then AudioContext.channelCount equals AudioContext.maxChannelCount" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioDestinationNode.channelCount attribute set maxChannelCount then AudioContext.channelCount equals AudioContext.maxChannelCount</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_channelCount_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="numberOfChannels" element_type="attribute" interface="AudioDestinationNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioDestinationNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiodestinationnode_channelCount_default_value" priority="P2" purpose="Check if AudioDestinationNode.channelCount attribute default value is 2" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioDestinationNode.channelCount attribute default value is 2</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_channelCount_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="channelCount" element_type="attribute" interface="AudioDestinationNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioDestinationNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_dopplerFactor_default_value" priority="P2" purpose="Check if the AudioListener.dopplerFactor default value is 1" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioListener.dopplerFactor default value is 1</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="dopplerFactor" element_type="attribute" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_dopplerFactor_value" priority="P2" purpose="Check if the AudioListener.dopplerFactor is float value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioListener.dopplerFactor is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="dopplerFactor" element_type="attribute" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_setOrientation_base" priority="P2" purpose="Check if AudioListener.setOrientation can change the direction of the listener" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioListener.setOrientation can change the direction of the listener</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setOrientation" element_type="method" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_setPosition_base" priority="P2" purpose="Check if AudioListener.setPosition can change the position of the listener in a 3D cartesian coordinate space" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioListener.setPosition can change the position of the listener in a 3D cartesian coordinate space</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setPosition" element_type="method" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_setVelocity_base" priority="P2" purpose="Check if AudioListener.setVelocity can set the velocity vector of the listener" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioListener.setVelocity can set the velocity vector of the listener</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setVelocity" element_type="method" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_speedOfSound_default_value" priority="P2" purpose="Check if the AudioListener.speedOfSound default value is 343.3" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioListener.speedOfSound default value is 343.3</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="speedOfSound" element_type="attribute" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audiolistener_speedOfSound_value" priority="P2" purpose="Check if the AudioListener.speedOfSound is float value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioListener.speedOfSound is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="speedOfSound" element_type="attribute" interface="AudioListener" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioListener</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_connect_output_input_no_argument" priority="P2" purpose="check if AudioNode.connect method,no throw exception if input and output param not set" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>check if AudioNode.connect method,no throw exception if input and output param not set</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_output_input_no_argument.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="connect" element_type="method" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_connect_three_base" priority="P2" purpose="check if AudioNode.connect method,no throw exception if with three param basic usage" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>check if AudioNode.connect method,no throw exception if with three param basic usage</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_three_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="connect" element_type="method" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_connect_two_arguments" priority="P2" purpose="Check if AudioNode.connect method,no throw exception if input param not set" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.connect method,no throw exception if input param not set</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_two_arguments.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="connect" element_type="method" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_disconnect_base" priority="P2" purpose="Check if AudioNode.disconnect method,no throw exception if input param set 0" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.disconnect method,no throw exception if input param set 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="disconnect" element_type="method" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audionode_disconnect_no_argument" priority="P2" purpose="Check if AudioNode.disconnect method,no throw exception if input param not set" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioNode.disconnect method,no throw exception if input param not set</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_no_argument.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="disconnect" element_type="method" interface="AudioNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audionode-interface</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_cancelScheduledValues_base" priority="P2" purpose="Check if AudioParam.cancelScheduledValues method executes well with float type parameter" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.cancelScheduledValues method executes well with float type parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="cancelScheduledValues" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_exponentialRampToValueAtTime_base" priority="P2" purpose="Check if AudioParam.exponentialRampToValueAtTime method executes well with two float parameters" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.exponentialRampToValueAtTime method executes well with two float parameters</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="exponentialRampToValueAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_linearRampToValueAtTime_base" priority="P2" purpose="Check if AudioParam.linearRampToValueAtTime method executes well with two float parameters" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.linearRampToValueAtTime method executes well with two float parameters</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="linearRampToValueAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_setTargetAtTime_base" priority="P2" purpose="Check if AudioParam.setTargetAtTime method executes well with float,double and double parameter" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.setTargetAtTime method executes well with float,double and double parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setTargetAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioprocessingevent_inputBuffer_value" priority="P2" purpose="Check if the AudioProcessingEvent.inputBuffer is AudioBuffer value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioProcessingEvent.inputBuffer is AudioBuffer value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="inputBuffer" element_type="attribute" interface="AudioProcessingEvent" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audioprocessingevent-interface---deprecated</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioprocessingevent_outputBuffer_value" priority="P2" purpose="Check if the AudioProcessingEvent.outBuffer is AudioBuffer value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the AudioProcessingEvent.outBuffer is AudioBuffer value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="outputBuffer" element_type="attribute" interface="AudioProcessingEvent" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#the-audioprocessingevent-interface---deprecated</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_detune_basic" priority="P2" purpose="Check if BiquadFilterNode.detune attribute exists and type and readonly" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode.detune attribute exists and type and readonly</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_detune_basic.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="detune" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_getFrequencyResponse_base" priority="P2" purpose="Check if BiquadFilterNode.getFrequencyResponse method executes well with Float32Array parameter" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode.getFrequencyResponse method executes well with Float32Array parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="getFrequencyResponse" element_type="method" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="biquadfilternode_type_default_value" priority="P2" purpose="Check if BiquadFilterNode.type attribute default value is 'lowpass'" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if BiquadFilterNode.type attribute default value is 'lowpass'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="type" element_type="attribute" interface="BiquadFilterNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="convolvernode_buffer_value" priority="P2" purpose="Check if the ConvolverNode.buffer is AudioBuffer value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the ConvolverNode.buffer is AudioBuffer value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="buffer" element_type="attribute" interface="ConvolverNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ConvolverNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="convolvernode_normalize_default_value" priority="P2" purpose="Check if the ConvolverNode.normalize default value is true" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the ConvolverNode.normalize default value is true</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="normalize" element_type="attribute" interface="ConvolverNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ConvolverNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="convolvernode_normalize_value" priority="P2" purpose="Check if the ConvolverNode.normalize is boolean value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the ConvolverNode.normalize is boolean value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="normalize" element_type="attribute" interface="ConvolverNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ConvolverNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="delaynode_delayTime_readonly" priority="P2" purpose="Check if DelayNode.delayTime attribute is readonly" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if DelayNode.delayTime attribute is readonly</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_readonly.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="delayTime" element_type="attribute" interface="DelayNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-DelayNode-section</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="delaynode_delayTime_value_default_value" priority="P2" purpose="Check if DelayNode.delayTime attribute default value is 0" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if DelayNode.delayTime attribute default value is 0</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_value_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="delayTime" element_type="attribute" interface="DelayNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="gainnode_gain_value_default_value" priority="P2" purpose="Check if GainNode.gain.value default value is 1" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if GainNode.gain.value default value is 1</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_value_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="gain" element_type="attribute" interface="GainNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-GainNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="offlineaudiocontext_oncomplete_type" priority="P2" purpose="Check if OfflineAudioContext.oncomplete attribute is object type" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OfflineAudioContext.oncomplete attribute is object type</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_oncomplete_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="oncomplete" element_type="attribute" interface="OfflineAudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OfflineAudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="offlineaudiocontext_startRendering_type" priority="P2" purpose="Check if OfflineAudioContext.startRendering method is type of function" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OfflineAudioContext.startRendering method is type of function</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_startRendering_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="startRendering" element_type="method" interface="OfflineAudioContext" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OfflineAudioContext</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_setPeriodicWave_exists" priority="P2" purpose="Check if OscillatorNode.setPeriodicWave function exists" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.setPeriodicWave function exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setPeriodicWave_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="playbackState" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_start_exists" priority="P2" purpose="Check if OscillatorNode.start method exists" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.start method exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="PLAYING_STATE" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_stop_base" priority="P2" purpose="Check if OscillatorNode.stop method executes well with double type parameter" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if OscillatorNode.stop method executes well with double type parameter</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="SCHEDULED_STATE" element_type="attribute" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="oscillatornode_stop_before_start" priority="P2" purpose="Check if an exception will be thrown when OscillatorNode.stop is before OscillatorNode.start" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if an exception will be thrown when OscillatorNode.stop is before OscillatorNode.start</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_before_start.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setWaveTable" element_type="method" interface="OscillatorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-OscillatorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_coneInnerAngle_value" priority="P2" purpose="Check if the PannerNode.coneInnerAngle is float value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.coneInnerAngle is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="coneInnerAngle" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_coneOuterAngle_value" priority="P2" purpose="Check if the PannerNode.coneOuterAngle is float value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.coneOuterAngle is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="coneOuterAngle" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_coneOuterGain_value" priority="P2" purpose="Check if the PannerNode.coneOuterGain is float value" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.coneOuterGain is float value</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="coneOuterGain" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_distanceModel_default_value" priority="P2" purpose="Check if the PannerNode.distanceModel default value is 'inverse'" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.distanceModel default value is 'inverse'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="distanceModel" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_distanceModel_exists" priority="P2" purpose="Check if PannerNode.distanceModel attribute exists" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if PannerNode.distanceModel attribute exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="distanceModel" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_distanceModel_exponential" priority="P2" purpose="Check if the PannerNode .distanceModel set value 'exponential'" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode .distanceModel set value 'exponential'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_exponential.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="distanceModel" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_distanceModel_inverse" priority="P2" purpose="Check if the PannerNode.distanceModel set value 'inverse'" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.distanceModel set value 'inverse'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_inverse.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="distanceModel" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_maxDistance_exists" priority="P2" purpose="Check if PannerNode.maxDistance attribute exists" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if PannerNode.maxDistance attribute exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="maxDistance" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_panningModel_default_value" priority="P2" purpose="Check if the PannerNode.panningModel default value is 1" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.panningModel default value is 1</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_default_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="panningModel" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_panningModel_HRTF" priority="P2" purpose="Check if the PannerNode.panningModel attribute set value 'HRTF'" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.panningModel attribute set value 'HRTF'</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_HRTF.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="panningModel" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_panningModel_value" priority="P2" purpose="Check if the PannerNode.panningModel changed another value to position the audio in 3D space" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.panningModel changed another value to position the audio in 3D space</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="panningModel" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_refDistance_exists" priority="P2" purpose="Check if PannerNode.refDistance attribute exists" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if PannerNode.refDistance attribute exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="refDistance" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_rolloffFactor_exists" priority="P2" purpose="Check if PannerNode.rolloffFactor attribute exists" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if PannerNode.rolloffFactor attribute exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="rolloffFactor" element_type="attribute" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_setOrientation_base" priority="P2" purpose="Check if the PannerNode.setOrientation can change the direction of the audio source" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.setOrientation can change the direction of the audio source</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setOrientation" element_type="method" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_setVelocity_base" priority="P2" purpose="Check if the PannerNode.setVelocity can set the velocity vector of the audio source" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if the PannerNode.setVelocity can set the velocity vector of the audio source</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setVelocity" element_type="method" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="pannernode_setVelocity_exists" priority="P2" purpose="Check if PannerNode.setVelocity function exists" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if PannerNode.setVelocity function exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setVelocity" element_type="method" interface="PannerNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-PannerNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="scriptprocessornode_bufferSize_type" priority="P2" purpose="Check if ScriptProcessorNode.bufferSize attribute is type of number" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if ScriptProcessorNode.bufferSize attribute is type of number</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_type.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="bufferSize" element_type="attribute" interface="ScriptProcessorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ScriptProcessorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="scriptprocessornode_onaudioprocess_exists" priority="P2" purpose="Check if ScriptProcessorNode.onaudioprocess attribute exists" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if ScriptProcessorNode.onaudioprocess attribute exists</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_onaudioprocess_exists.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="onaudioprocess" element_type="attribute" interface="ScriptProcessorNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#idl-def-ScriptProcessorNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="waveshapernode_curve_value" priority="P2" purpose="Check if WaveShaperNode.curve attribute value is Float32Array object" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if WaveShaperNode.curve attribute value is Float32Array object</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_value.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="curve" element_type="attribute" interface="WaveShaperNode" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#WaveShaperNode</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_setValueAtTime_base" priority="P2" purpose="Check if AudioParam.setValueAtTime method executes well with two float parameters" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.setValueAtTime method executes well with two float parameters</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setValueAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_setValueCurveAtTime_base" priority="P2" purpose="Check if AudioParam.setValueCurveAtTime method executes well with three parameters" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.setValueCurveAtTime method executes well with three parameters</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="setValueCurveAtTime" element_type="method" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API" execution_type="auto" id="audioparam_value_base" priority="P2" purpose="Check if AudioParam.value attribute is initialized to the defaultValue" status="approved" type="compliance">
        <description>
          <steps>
            <step order="1">
              <step_desc>Check if AudioParam.value attribute is initialized to the defaultValue</step_desc>
              <expected>Pass</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_base.html</test_script_entry>
        </description>
        <specs>
          <spec>
            <spec_assertion category="Tizen W3C API Specifications" element_name="value" element_type="attribute" interface="AudioParam" section="Media" specification="Web Audio API" />
            <spec_url>https://webaudio.github.io/web-audio-api/#AudioParam</spec_url>
            <spec_statement />
          </spec>
        </specs>
      </testcase>
    </set>
  </suite>
</test_definition>
