<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl"  href="./testcase.xsl"?>
<test_definition>
  <suite name="tct-testconfig" launcher="xwalk">
    <set name="tct-bluetooth-tizen-tests">
      <testcase purpose="tct-bluetooth-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="BluetoothConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>The 'tct-bt-helper' web application MUST be installed on the remote device whose address is REMOTE_DEVICE_ADDRESS.
The tct-bt-helper is included in the tct-bluetooth-tizen-tests package. Install the tct-bluetooth-tizen-tests package on both your test device and the remote Bluetooth device.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="2">
              <step_desc>Turn on the Bluetooth of your test device and the remote device. Make the two devices discoverable to each other in 'Settings' application.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="3">
              <step_desc>Before manual testing, launch the 'tct-bt-helper' web application installed on the remote device, click 'Register service' on the 'tct-bt-helper', and then execute the TCs tests manually.</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-callhistory-tizen-tests">
      <testcase purpose="tct-callhistory-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="CallHistoryConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>Make sure the telephony works well.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="2">
              <step_desc>Insert a SIM card and enable the cellular device service on your test device. During manual testing, you can see the preconditions for each test.</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-datacontrol-tizen-tests">
      <testcase purpose="tct-datacontrol-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="DataControlConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc> Create the sample 'DictionaryDataControlProvider' native application using Tizen SDK. You can find this native application in the IDE sample project.
              In Tizen SDK, select 'File' -&gt; 'New' -&gt; 'Tizen' -&gt; 'Tizen Native Project' -&gt; 'Sample' -&gt; 'DictionaryDataControlProvider'.
              </step_desc>
              <expected>TBD</expected>
            </step>
            <step order="2">
              <step_desc> Build and sign this native application with the same certification which you sign the 'tct-datacontrol-tizen-tests' package with.
              </step_desc>
              <expected>TBD</expected>
            </step>
            <step order="3">
              <step_desc> Launch this native application(No UI).</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-download-tizen-tests">
      <testcase purpose="tct-download-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="DownloadConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>A network connection capable of accessing the Internet MUST be established. If your device supports Wi-Fi, turn on Wi-Fi. If your device supports telephony, insert a SIM card and enable the cellular data service on your test device. During manual testing, you can see the preconditions for each test.</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-messaging-email-tizen-tests">
      <testcase purpose="tct-messaging-email-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="MessagingConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>There MUST be established Network connection for sending and receiving email tests (preferably through WiFi as it has smaller delays on connection)</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="2">
	      <step_desc>Add an account through Settings application.
   (Settings -> Personal / Accounts)
	2.1 Click "Add"
	2.1 Select type of account: Email
	2.2 Enter e-mail address and password (preferably Gmail account)
	2.3 Click "Next" - configuration will be verified and stored</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="3">
              <step_desc>There MUST be several email messages in your mailbox to be used for searching and removing messages tests</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="4">
              <step_desc>There MUST be exactly one email service configured on the device.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="5">
              <step_desc>EMAIL_RECIPIENT_1 is the e-mail address of the account You have set up on the device</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="6">
              <step_desc>EMAIL_RECIPIENT_2 is any valid e-mail address different from EMAIL_RECIPIENT_1</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-messaging-mms-tizen-tests">
      <testcase purpose="tct-messaging-mms-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="MessagingConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>A SIM card MUST be inserted for sending MMS messages.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="2">
              <step_desc>MMS_RECIPIENT_1 is any valid phone number (without country code prefix). You should not use a number of the SIM card inserted into test device.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="3">
              <step_desc>MMS_RECIPIENT_2 is any valid phone number, different from MMS_RECIPIENT_1 (without country code prefix)</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-messaging-sms-tizen-tests">
      <testcase purpose="tct-messaging-sms-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="MessagingConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>A SIM card MUST be inserted for sending SMS messages.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="2">
              <step_desc>SMS_RECIPIENT_1 is any valid phone number (without country code prefix). You should not use a number of the SIM card you in test device.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="3">
              <step_desc>SMS_RECIPIENT_2 is any valid phone number, different from SMS_RECIPIENT_1 (without country code prefix)</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-nfc-tizen-tests">
      <testcase purpose="tct-nfc-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="NFCConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>Manual tests requires a NFC tag (which supports NDEF) and a NFC enabled device to connect your test device with.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="2">
              <step_desc>Enable NFC on your test device and the NFC device you will connect to.</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-time-tizen-tests">
      <testcase purpose="tct-time-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="TimeConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>Before executing manual and auto time test, must set current time, language, region, and time must be as follows:</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="2">
              <step_desc>'Time zone' MUST be set as Seoul.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="3">
              <step_desc>Set the current time correctly.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="4">
              <step_desc>'Display language' MUST be set as English(United Kingdom).</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="5">
              <step_desc>'Region' MUST be set as English(United Kingdom).</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="6">
              <step_desc>Time format MUST be set as AM/PM format,</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-power-tizen-tests">
      <testcase purpose="tct-power-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="PowerConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>Turn off Automatic screen brightness (pull down the notification panel and ensure that Auto is disabled)</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <steps>
            <step order="2">
              <step_desc>Set Backlight time to 15 seconds (Settings -&gt; Display -&gt; Backlight time -&gt; 15 seconds)</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-push-tizen-tests">
      <testcase purpose="tct-push-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="PushConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>A network connection capable of accessing the Internet MUST be established.</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-networkbearerselection-tizen-tests">
      <testcase purpose="tct-networkbearerselection-tizen-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="NetworkbearerselectionConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>Make sure the telephony works well.</step_desc>
              <expected>TBD</expected>
            </step>
            <step order="2">
              <step_desc>Insert a SIM card and enable cellular data service on your test device.</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="tct-geoallow-w3c-tests">
      <testcase purpose="tct-geoallow-w3c-tests Configuration" type="compliance" status="approved" component="WebAPI/Tizen/Configuration" execution_type="manual" priority="P0" id="GeoallowConfiguration">
        <description>
          <pre_condition/>
          <post_condition/>
          <steps>
            <step order="1">
              <step_desc>Enable GPS or connect to an available network</step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry timeout="90" test_script_expected_result="0"/>
        </description>
        <specs>
          <spec>
            <spec_assertion element_type="TBD" element_name="TBD" interface="TBD" specification="TBD" section="TBD" category="TBD"/>
            <spec_url>TBD</spec_url>
            <spec_statement>TBD</spec_statement>
          </spec>
        </specs>
      </testcase>
    </set>
    <set name="wrt-autodevice-tizen-tests">
      <testcase component="BasicFunction/Tizen/Configuration" execution_type="manual" id="AutoDeviceTizenConfiguration" purpose="wrt-autodevice-tizen-tests Configuration">
        <description>
          <pre_condition/>
          <steps>
            <step order="1">
              <step_desc>Push crosswalk binary to device:
                1.1 Get crosswalk binary path "Tizen_Crosswalk_Path" from /tmp/Crosswalk_wrt_BFT.conf file
                1.2 sdb push $Tizen_Crosswalk_Path /tmp/
                1.3 sdb push /tmp/Crosswalk_wrt_BFT.conf /tmp/Crosswalk_wrt_BFT.conf
              </step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0" timeout="90"/>
        </description>
      </testcase>
    </set>
    <set name="webapi-dlna-xwalk-tests">
      <testcase component="WebAPI/Media Server API/DLNA" execution_type="manual" id="DlnaConfiguration" purpose="webapi-dlna-xwalk-tests Configuration">
        <description>
          <pre_condition/>
          <steps>
            <step order="1">
              <step_desc>Modify rygel.conf on IVI device:
                $ cp /etc/rygel.conf /home/app/.config/
                - video-upload-folder=@VIDEOS@
                + video-upload-folder=/home/app/Videos
                - music-upload-folder=@MUSIC@
                + music-upload-folder=/home/app/Sounds
                - picture-upload-folder=@PICTURES@
                + picture-upload-folder=/home/app/Images
                # Allow upload of media files?
                - allow-upload=false
                + allow-upload=true
                # Allow deletion of media folders and files?
                - allow-deletion=false
                + allow-deletion=true
                strict-sharing=false
                - title=@REALNAME@'s media
                + title=iTracker
                [MediaExport]
                - enabled=false
                - title=@REALNAME@'s media
                + enabled=true
                + title=iMediaExport
                - uris=@MUSIC@;@VIDEOS@;@PICTURES@
                + uris=/home/app/Videos;/home/app/Sounds;/home/app/Images;                
                enabled=true
                - title=My Media
                + title=iLMS
                enabled=true
                - title=Audio/Video playback on @HOSTNAME@
                + title=iPlaybin
              </step_desc>
              <expected>TBD</expected>
            </step>
            <step order="2">
              <step_desc>Create Videos, Sounds and Images directories in /home/app/ on IVI device.
              </step_desc>
              <expected>TBD</expected>
            </step>
            <step order="3">
              <step_desc>Add some media content to IVI device:
                * Copy media files to /home/app/Videos, /home/app/Sounds and /home/app/Images.
              </step_desc>
              <expected>TBD</expected>
            </step>
            <step order="4">
              <step_desc>Launch of services on IVI device:
                $ su - app
                $ rygel
              </step_desc>
              <expected>TBD</expected>
            </step>
          </steps>
          <test_script_entry test_script_expected_result="0" timeout="90"/>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>
