<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl"  href="./testcase.xsl"?>
<test_definition>
  <suite name="tct-bluetooth-tizen-tests" launcher="xwalk" extension="crosswalk" category="Tizen Web Device APIs">
    <set name="Bluetooth">
      <capabilities>
        <capability name="bluetooth"/>
      </capabilities>
      <testcase purpose="Method of createBonding exists in bluetooth adapter" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_exist" onload_delay="180">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Method of discoverDevices exists in bluetooth adapter" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_exist" onload_delay="180">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if registerRFCOMMServiceByUUID method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_exist" onload_delay="180">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if setName method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_exist" onload_delay="180">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if setVisible method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_exist" onload_delay="180">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if stopDiscovery method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_exist" onload_delay="180">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if onfinish method of successful callback of discoverDevices method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfinish_successful">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfinish_successful.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if device uuid is correct" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_deviceuuid_correct">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_deviceuuid_correct.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if onMessage callback function invoked" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket_onmessage_callback">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_onmessage_callback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of destroyBonding method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_callback_onerror">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check visible attribute of bluetooth" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_visible_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_visible_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if getDevice method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if getKnownDevices method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if device is bonded" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_devicebonded">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_devicebonded.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if unregister method exists" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if successful callback of createBonding method invoked" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_with_errorCallback">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of connectToServiceByUUID method invoked" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothDevice_connectToServiceByUUID_onerror">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice_connectToServiceByUUID_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if setPowered method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments setPowered(valid_state, valid_successCallback, valid_errorCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of registerRFCOMMServiceByUUID method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_onerror">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if writeData method work successfully" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket_writeData">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_writeData.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of createBonding method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_callback_onerror">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if successful callback of discoverDevices method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_callback_successful">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_callback_successful.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if successful callback of getKnownDevices method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_callback_successful">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_callback_successful.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if long name is set" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_longname">
        <description>
          <pre_condition>Please wait at least 5 second before run test</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_longname.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments unregister(valid_successCallback, valid_errorCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if powered attribute of adapter is false" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPower_off">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPower_off.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if onClose callback function invoked" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket_onclose_callback">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>When you see communicate please unregister the service at the remote device</step_desc>
              <expected>Pass.</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_onclose_callback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments getDevice(valid_address, valid_successCallback, valid_errorCallback)" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_getDevice_with_errorCallback">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Method of destroyBonding exists in bluetooth adapter" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether a service record is registered and onconnect is called" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_registerRFCOMMServiceByUUID_onconnect_successful">
        <description>
          <pre_condition>tct-bt-helper MUST be launched on the remote device.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Push [Search] button on the remote device after pop-up is launched.</step_desc>
              <expected>The test device is found by the remote device.</expected>
            </step>
            <step order="2">
              <step_desc>Push [Connect to service] button on the remote device after selecting test device among found devices.</step_desc>
              <expected>onconnect is called.</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_onconnect_successful.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if address attribute exists in device" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_address_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_address_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if name attribute of adapter set" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_errorCallback">
        <description>
          <pre_condition>Please wait at least 5 second before run test</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check name attribute in adapter" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_name_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_name_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if device name is correct" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_devicename_correct">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_devicename_correct.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if onfound method of successful callback of discoverDevices method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfound_successful">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfound_successful.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of setName method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_callback_error">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_callback_error.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check powered attribute in adapter" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_powered_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_powered_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of getKnownDevices method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_callback_onerror">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of getDevice method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_callback_onerror">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if getDefaultAdapter method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_getDefaultAdapter_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_getDefaultAdapter_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute deviceService of bluetooth" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_deviceService_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_deviceService_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute deviceMajor of bluetooth" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_deviceMajor_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_deviceMajor_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute deviceMinor of bluetooth" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_deviceMinor_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_deviceMinor_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute bluetooth of tizen" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManagerObject_bluetooth_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManagerObject_bluetooth_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if readData method correct, after sending nothing" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket_readData">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_readData.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute uuid in BluetoothServiceHandler" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_uuid_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_uuid_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute name in BluetoothServiceHandler" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_name_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_name_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute isConnected in BluetoothServiceHandler" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_isConnected_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_isConnected_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check using createBonding method which is in BluetoothAdapter interface to bond device" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_bondingDevice">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_bondingDevice.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments hasService(valid_service) and  if the method does what it should" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothClass_hasService">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClass_hasService.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check using connectToServiceByUUID method which is in BluetoothDevice interface to open connection" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothDevice_connectToServiceByUUID">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice_connectToServiceByUUID.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check using unregister method which is in BluetoothServiceHandler interface to unregister service record" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_unregisterServiceRecord">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_unregisterServiceRecord.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether createBonding() method called with invalid successCallback and errorCallback set to null throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_with_error_null_and_success_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_with_error_null_and_success_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether discoverDevices() method called with invalid successCallback throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_invalid_callback_name">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_invalid_callback_name.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments getKnownDevices(valid_successCallback, valid_errorCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_with_errorCallback">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether setPowered() method properly sets powered parameter of BluetoothAdapter (part 2)" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments stopDiscovery(valid_successCallback, valid_errorCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check enum OPEN in socket" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothSocketState_open_enum">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocketState_open_enum.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_AUDIO_VIDEO" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_AUDIO_VIDEO_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_AUDIO_VIDEO_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_COMPUTER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_COMPUTER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_COMPUTER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_HEALTH" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_HEALTH_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_HEALTH_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_IMAGING" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_IMAGING_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_IMAGING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_MISC" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_MISC_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_MISC_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_NETWORK" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_NETWORK_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_NETWORK_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_PERIPHERAL" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_PERIPHERAL_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_PERIPHERAL_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_PHONE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_PHONE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_PHONE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_TOY" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_TOY_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_TOY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_UNCATEGORIZED" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_UNCATEGORIZED_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMajor_WEARABLE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_WEARABLE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_WEARABLE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_CAMCORDER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_CAMCORDER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_CAMCORDER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_CAR_AUDIO" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_CAR_AUDIO_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_CAR_AUDIO_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_DISPLAY_AND_LOUDSPEAKER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_DISPLAY_AND_LOUDSPEAKER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_DISPLAY_AND_LOUDSPEAKER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_GAMING_TOY" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_GAMING_TOY_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_GAMING_TOY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_HANDSFREE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_HANDSFREE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_HANDSFREE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_HEADPHONES" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_HEADPHONES_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_HEADPHONES_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_HIFI" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_HIFI_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_HIFI_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_LOUDSPEAKER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_LOUDSPEAKER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_LOUDSPEAKER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_MICROPHONE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_MICROPHONE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_MICROPHONE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_MONITOR" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_MONITOR_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_MONITOR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_PORTABLE_AUDIO" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_PORTABLE_AUDIO_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_PORTABLE_AUDIO_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_SETTOP_BOX" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_SETTOP_BOX_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_SETTOP_BOX_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_UNRECOGNIZED" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_UNRECOGNIZED_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_UNRECOGNIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_VCR" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_VCR_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_VCR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_VIDEO_CAMERA" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_VIDEO_CAMERA_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_VIDEO_CAMERA_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_VIDEO_CONFERENCING" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_VIDEO_CONFERENCING_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_VIDEO_CONFERENCING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_WEARABLE_HEADSET" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_WEARABLE_HEADSET_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_WEARABLE_HEADSET_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_DESKTOP" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_DESKTOP_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_DESKTOP_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_HANDHELD_PC_OR_PDA" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_HANDHELD_PC_OR_PDA_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_HANDHELD_PC_OR_PDA_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_LAPTOP" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_LAPTOP_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_LAPTOP_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_PALM_PC_OR_PDA" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_PALM_PC_OR_PDA_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_PALM_PC_OR_PDA_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_SERVER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_SERVER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_SERVER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_UNCATEGORIZED" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_UNCATEGORIZED_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_WEARABLE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_WEARABLE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_WEARABLE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_ANKLE_PROSTHESIS" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_ANKLE_PROSTHESIS_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_ANKLE_PROSTHESIS_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_BLOOD_PRESSURE_MONITOR" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_BLOOD_PRESSURE_MONITOR_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_BLOOD_PRESSURE_MONITOR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_BODY_COMPOSITION_ANALYZER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_BODY_COMPOSITION_ANALYZER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_BODY_COMPOSITION_ANALYZER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_DATA_DISPLAY" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_DATA_DISPLAY_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_DATA_DISPLAY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_GLUCOSE_METER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_GLUCOSE_METER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_GLUCOSE_METER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_KNEE_PROSTHESIS" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_KNEE_PROSTHESIS_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_KNEE_PROSTHESIS_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_MEDICATION_MONITOR" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_MEDICATION_MONITOR_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_MEDICATION_MONITOR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_PEAK_FLOW_MONITOR" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_PEAK_FLOW_MONITOR_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_PEAK_FLOW_MONITOR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_PULSE_OXIMETER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_PULSE_OXIMETER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_PULSE_OXIMETER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_PULSE_RATE_MONITOR" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_PULSE_RATE_MONITOR_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_PULSE_RATE_MONITOR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_STEP_COUNTER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_STEP_COUNTER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_STEP_COUNTER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_THERMOMETER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_THERMOMETER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_THERMOMETER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_UNDEFINED" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_UNDEFINED_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_UNDEFINED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_WEIGHING_SCALE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_WEIGHING_SCALE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_WEIGHING_SCALE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_CAMERA" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_CAMERA_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_CAMERA_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_DISPLAY" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_DISPLAY_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_DISPLAY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_PRINTER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_PRINTER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_PRINTER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_SCANNER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_SCANNER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_SCANNER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_UNCATEGORIZED" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_UNCATEGORIZED_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_CARD_READER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_CARD_READER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_CARD_READER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_DEGITIZER_TABLET" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_DEGITIZER_TABLET_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_DEGITIZER_TABLET_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_DIGITAL_PEN" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_DIGITAL_PEN_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_DIGITAL_PEN_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_GAMEPAD" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_GAMEPAD_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_GAMEPAD_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_INPUT_DEVICE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_INPUT_DEVICE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_INPUT_DEVICE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_SCANNER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_SCANNER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_SCANNER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_JOYSTICK" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_JOYSTICK_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_JOYSTICK_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_POINTING_DEVICE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_POINTING_DEVICE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_POINTING_DEVICE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_REMOTE_CONTROL" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_REMOTE_CONTROL_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_REMOTE_CONTROL_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_SENSING_DEVICE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_SENSING_DEVICE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_SENSING_DEVICE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_UNCATEGORIZED" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_UNCATEGORIZED_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_CELLULAR" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_CELLULAR_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_CELLULAR_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_CORDLESS" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_CORDLESS_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_CORDLESS_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_ISDN" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_ISDN_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_ISDN_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_MODEM_OR_GATEWAY" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_MODEM_OR_GATEWAY_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_MODEM_OR_GATEWAY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_SMARTPHONE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_SMARTPHONE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_SMARTPHONE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_UNCATEGORIZED" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_UNCATEGORIZED_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_CONTROLLER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_CONTROLLER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_CONTROLLER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_DOLL" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_DOLL_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_DOLL_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_GAME" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_GAME_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_GAME_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_ROBOT" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_ROBOT_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_ROBOT_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_VEHICLE" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_VEHICLE_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_VEHICLE_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_GLASSES" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_GLASSES_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_GLASSES_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_HELMET" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_HELMET_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_HELMET_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_JACKET" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_JACKET_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_JACKET_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_PAGER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_PAGER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_PAGER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_WRITST_WATCH" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_WRITST_WATCH_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_WRITST_WATCH_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceService_AUDIO" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_AUDIO_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_AUDIO_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceService_CAPTURING" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_CAPTURING_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_CAPTURING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceService_INFORMATION" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_INFORMATION_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_INFORMATION_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceService_LIMITED_DISCOVERABILITY" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_LIMITED_DISCOVERABILITY_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_LIMITED_DISCOVERABILITY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceService_NETWORKING" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_NETWORKING_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_NETWORKING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceService_OBJECT_TRANSFER" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_OBJECT_TRANSFER_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_OBJECT_TRANSFER_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceService_POSITIONING" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_POSITIONING_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_POSITIONING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceService_RENDERING" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_RENDERING_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_RENDERING_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check various identifiers of BluetoothClassDeviceService_TELEPHONY" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_TELEPHONY_const">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_TELEPHONY_const.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the object can have new properties added for BluetoothClassDeviceMajor" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_extend">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the object BluetoothClassDeviceMinor can have new properties added" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_extend">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the object can have new properties added for BluetoothClassDeviceService" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_extend">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the object can have new properties added for BluetoothAdapter" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_extend">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothAdapter in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothClassDeviceMajor in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothClassDeviceMinor in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothClassDeviceService with new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothClass in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothClass_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClass_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothDeviceArraySuccessCallback in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothDeviceArraySuccessCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDeviceArraySuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothDeviceSuccessCallback in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothDeviceSuccessCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDeviceSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothDevice in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothDevice_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothDiscoverDevicesSuccessCallback in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the object can have new properties added for BluetoothManager" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_extend">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check attribute bluetooth for readonly" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_in_tizen">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_in_tizen.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothManager in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the object can have new properties added for BluetoothServiceHandler" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_extend">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothServiceHandler in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothServiceSuccessCallback in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceSuccessCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothSocketSuccessCallback in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothSocketSuccessCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocketSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothSocket in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothSocket_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check discoverDevices with missing non-optional argument" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_missarg">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check getKnownDevices with missing non-optional argument" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_missarg">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check getDevice with missing non-optional argument" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_missarg">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check createBonding with missing non-optional argument" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_missarg">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check registerRFCOMMServiceByUUID with missing non-optional argument" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_missarg">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument setName() successCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument setName() errorCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether setName() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether setName() method called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether setPowered() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if successful callback of setPowered() method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether setPowered() method called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument setPowered() errorCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether discoverDevices() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check discoverDevices() argument successCallback validation - use simple function" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether discoverDevices() method called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument discoverDevices() errorCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether stopDiscovery() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether stopDiscovery() method called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check stopDiscovery() argument successCallback validation - use {onsuccess: function (){}}" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check stopDiscovery() argument errorCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether getKnownDevices() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether getKnownDevices() method called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check getKnownDevices() argument successCallback validation - use {onsuccess: function (){}}" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check getKnownDevices() argument errorCallback validation - use {onerror: function (){}}" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether getDevice() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether getDevice() method called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if successful callback of getDevice() method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check getDevice() argument errorCallback validation - use {onerror: function (){}}" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether createBonding() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument createBonding() successCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether createBonding() method called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument createBonding() errorCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether registerRFCOMMServiceByUUID() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument registerRFCOMMServiceByUUID() successCallback validation - use {onsuccess: function (){}}" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether registerRFCOMMServiceByUUID() method called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument registerRFCOMMServiceByUUID() errorCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether destroyBonding() method called with invalid successCallback argument throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_successCallback_TypeMismatch">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether destroyBonding() method called with invalid errorCallback argument throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_errorCallback_TypeMismatch">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if destroyBonding() method throws exception when invalid success callback is given" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_successCallback_invalid_cb">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if destroyBonding() method throws exception when invalid error callback is given" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_errorCallback_invalid_cb">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether unregister() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether unregister() method of the BluetoothServiceHandler with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if successful callback of unregister() method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check unregister() argument errorCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if BluetoothDeviceArraySuccessCallback callback is called and if its arguments have proper type" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothDeviceArraySuccessCallback_onsuccess">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDeviceArraySuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if BluetoothServiceSuccessCallback callback is called and if its arguments have proper type" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceSuccessCallback_onsuccess">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceSuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its onstarted arguments have proper type" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_onstarted">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_onstarted.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its ondevicefound arguments have proper type" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_ondevicefound">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_ondevicefound.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its onfinished arguments have proper type" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_onfinished">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_onfinished.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its ondevicedisappeared arguments have proper type" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothDiscoverDevicesSuccessCallback_ondevicedisappeared">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Disable the bluetooth of the remote device after pop-up is launched on test device.</step_desc>
              <expected>ondevicedisappeared callback is invoked.</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_ondevicedisappeared.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method getDefaultAdapter of BluetoothManager accepts extra argument" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_getDefaultAdapter_extra_argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_getDefaultAdapter_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check connectToServiceByUUID with errorCallback" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothDevice_connectToServiceByUUID_with_errorCallback">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice_connectToServiceByUUID_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Proper close invocation without arguments - should work" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket_close">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_close.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments setName(valid_name)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments setName(valid_name, successCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments setPowered(valid_state, valid_successCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments discoverDevices(valid_successCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments discoverDevices(valid_successCallback, errorCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_with_errorCallback">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Proper invocation of getDefaultAdapter method  without arguments" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_getDefaultAdapter">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_getDefaultAdapter.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments stopDiscovery(valid_successCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments stopDiscovery" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments getKnownDevices(valid_successCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments getDevice(valid_address, valid_successCallback)" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_getDevice">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments createBonding(valid_address, valid_successCallback)" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments destroyBonding(valid_address, valid_successCallback, valid_errorCallback)" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_with_errorCallback">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments destroyBonding(valid_address, valid_successCallback)" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding_with_successCallback">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments destroyBonding(valid_address)" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_destroyBonding">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments registerRFCOMMServiceByUUID(valid_uuid, valid_name, valid_successCallback, valid_errorCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments registerRFCOMMServiceByUUID(valid_uuid, valid_name, valid_successCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments unregister(valid_successCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments unregister()" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check BluetoothDiscoverDevicesSuccessCallback() callback with invalid callback" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="Bluetooth_discoverDevices_successCallback_invalidcb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/Bluetooth_discoverDevices_successCallback_invalidcb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether setVisible() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if successful callback of setVisible() method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether setVisible() method called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of setVisible() method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments setVisible(valid_mode, valid_successCallback, valid_errorCallback, valid_timeout)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_with_timeout">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_with_timeout.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments setVisible(valid_mode, valid_successCallback, valid_errorCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments setVisible(valid_mode, valid_successCallback)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with optional arguments setVisible(valid_mode)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothAdapterChangeCallback in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments setChangeListener(valid_listener)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether setChangeListener() method called with invalid listener argument throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_listener_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_listener_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if setChangeListener method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check setChangeListener() with invalid callback" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_listener_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_listener_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check setChangeListener with missing non-optional argument" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_missarg">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check onnamechanged listener is invoked after setName()" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_onnamechanged">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_onnamechanged.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check onstatechanged listener is invoked after setPowered()" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_onstatechanged">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_onstatechanged.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check onvisibilitychanged listener is invoked after setVisible()" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_onvisibilitychanged">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_onvisibilitychanged.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check unsetChangeListener of adapter" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_unsetChangeListener">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_unsetChangeListener.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if unsetChangeListener method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_unsetChangeListener_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_unsetChangeListener_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if method close of unsetChangeListener accepts extra argument" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_unsetChangeListener_extra_argument">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_unsetChangeListener_extra_argument.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothHealthApplication in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the object BluetoothHealthApplication can have new properties added it" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_extend">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the dataType unsigned short exist in BluetoothHealthApplication has default value and its readonly" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_dataType_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_dataType_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the name string exist in BluetoothHealthApplication has default value and its readonly" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_name_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_name_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the onconnect in BluetoothHealthApplication has default value and it's writable" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_onconnect_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_onconnect_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non-optional arguments getBluetoothProfileHandler(valid_profileType)" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getBluetoothProfileHandler">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getBluetoothProfileHandler.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if getBluetoothProfileHandler method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getBluetoothProfileHandler_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getBluetoothProfileHandler_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the object BluetoothHealthProfileHandler can have new properties added it" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_extend">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothHealthProfileHandler in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check with non optional arguments registerSinkApplication" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether registerSinkApplication() method called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument registerSinkApplication() errorCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if registerSinkApplication method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check registerSinkApplication with missing non-optional argument" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_missarg">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether registerSinkApplication() method called with invalid successCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument registerSinkApplication() successCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check registerSinkApplication with valid optional arguments" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check unregister with non optional arguments" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether unregiste() method of the BluetoothHealthApplication called with invalid errorCallback argument throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_errorCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument unregister() errorCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_errorCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if unregister method exists in BluetoothHealthApplication" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether unregister() method called with invalid successCallback throws an exception" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_successCallback_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check argument unregister() successCallback validation" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_successCallback_invalid_cb">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_successCallback_invalid_cb.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check unregister with successCallback and errorCallback" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_with_errorCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_with_errorCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check unregister with successCallback" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_with_successCallback">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_with_successCallback.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothHealthChannel in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthChannel_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthChannel_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if connectToSource method exists" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_connectToSource_exist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_connectToSource_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check connectToSource with missing non-optional argument" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_connectToSource_missarg">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_connectToSource_missarg.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothProfileHandler in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothProfileHandler_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothProfileHandler_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if profileType attribute exists in BluetoothProfileHandler" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothProfileHandler_profileType_attribute">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothProfileHandler_profileType_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether a service record is registered in the device service record database properly (part 2)" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothServiceHandler_onconnect_attribute">
        <description>
          <pre_condition>tct-bt-helper MUST be launched on the remote device.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>Push [Search] button on the remote device after pop-up is launched.</step_desc>
              <expected>The test device is found by the remote device.</expected>
            </step>
            <step order="2">
              <step_desc>Push [Connect to service] button on the remote device after selecting test device among found devices.</step_desc>
              <expected>onconnect is called.</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_onconnect_attribute.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if BluetoothHealthApplicationSuccessCallback callback is called with propriety arguments" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplicationSuccessCallback_onsuccess">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplicationSuccessCallback_onsuccess.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothHealthApplicationSuccessCallback in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplicationSuccessCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplicationSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothHealthChannelChangeCallback in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthChannelChangeCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthChannelChangeCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothHealthChannelSuccessCallback in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthChannelSuccessCallback_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthChannelSuccessCallback_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if is possible to call BluetoothManagerObject in new expresion" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothManagerObject_notexist">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManagerObject_notexist.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Test whether the object can have new properties added for BluetoothProfileHandler" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothProfileHandler_extend">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothProfileHandler_extend.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of discoverDevices method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_callback_onerror">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of BluetoothAdapter method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_callback_onerror">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of stopDiscovery method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_callback_onerror">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of unregister method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_callback_onerror">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_callback_onerror.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if error callback of registerSinkApplication method invoked" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_callback_error">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_callback_error.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if device address is correct" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothAdapter_createBonding_deviceaddress_correct">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_deviceaddress_correct.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether destroyBonding() method called with invalid successCallback and errorCallback set to null throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_with_success_TypeMismatch_and_error_null">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether destroyBonding() method called with invalid errorCallback and successCallback set to null throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_with_success_null_and_error_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_with_success_null_and_error_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if device address is found" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfound_deviceaddress">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfound_deviceaddress.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if device name is found" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfound_devicename">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfound_devicename.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check if BluetoothAdapter exists and implements methods" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_function_type_check">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_function_type_check.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether getDevice() method called with invalid successCallback and errorCallback set to null throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_with_success_TypeMismatch_and_error_null">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether all known Bluetooth devices are listed properly (part 2)" onload_delay="180" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_check_types">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_check_types.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether getKnownDevices() method called with invalid successCallback and null as errorCallback argument throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_success_TypeMismatch_error_null">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_success_TypeMismatch_error_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether registerRFCOMMServiceByUUID() method called with invalid successCallback and errorCallback set to null throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_with_success_TypeMismatch_and_error_null">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether setName() method called with invalid successCallback and errorCallback set to null throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_success_TypeMismatch_and_error_null">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check whether setName() method called with invalid errorCallback and successCallback set to null throws an exception" component="TizenAPI/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_success_null_and_error_TypeMismatch">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_success_null_and_error_TypeMismatch.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check BluetoothClass attributes and functions" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothClass">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>several tests executed from base test</step_desc>
              <expected>all subtests should be successful</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClass.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check BluetoothDevice attributes and functions" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothDevice">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>several tests executed from base test</step_desc>
              <expected>all subtests should be successful</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice.html</test_script_entry>
        </description>
      </testcase>
      <testcase purpose="Check BluetoothSocket attributes and functions" component="TizenAPI/Communication/Bluetooth" execution_type="manual" id="BluetoothSocket">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices. The remote device MUST register the service by pushing [Register service] button on tct-bt-helper.</pre_condition>
          <steps>
            <step order="1">
              <step_desc>several tests executed from base test</step_desc>
              <expected>all subtests should be successful</expected>
            </step>
          </steps>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>
