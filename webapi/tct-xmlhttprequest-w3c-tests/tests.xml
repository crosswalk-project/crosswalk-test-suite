<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="W3C/HTML5 APIs" name="tct-xmlhttprequest-w3c-tests">
    <set name="XMLHttpRequest1" type="js">
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_FormData_append_exist" purpose="Check if formdata.append method exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_FormData_append_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_upload_exist" purpose="Check if the XMLHttpRequest.upload exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_upload_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_abort_exist" purpose="Check if xmlhttprequest.abort method exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_abort_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_DONE_exist" purpose="Check if XMLHttpRequest.DONE exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_DONE_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_DONE_type" purpose="Check if the type of XMLHttpRequest.DONE is 'number'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_DONE_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_getAllResponseHeaders_exist" purpose="Check if XMLHttpRequest Level2 has getAllResponseHeaders method">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_getAllResponseHeaders_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_getResponseHeader_exist" purpose="Check if xmlhttprequest.getResponseHeader method exits">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_getResponseHeader_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_HEADERS_RECEIVED_exist" purpose="Check if XMLHttpRequest.HEADERS_RECEIVED exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_HEADERS_RECEIVED_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_HEADERS_RECEIVED_type" purpose="Check if the type of XMLHttpRequest.HEADERS_RECEIVED is 'number'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_HEADERS_RECEIVED_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_LOADING_exist" purpose="Check if XMLHttpRequest.LOADING exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_LOADING_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_LOADING_type" purpose="Check if the type of XMLHttpRequest.LOADING is 'number'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_LOADING_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onabort_exist" purpose="Check if XMLHttpRequestEventTarget.onabort exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onabort_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onabort_event" purpose="Check if the onabort event occurs when the request abort">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onabort_event.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onerror_exist" purpose="Check if XMLHttpRequestEventTarget.onerror exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onerror_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onerror_event" purpose="Check if the onerror event occurs when the request fail">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onerror_event.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onload_exist" purpose="Check if XMLHttpRequestEventTarget.onload exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onload_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onload_event" purpose="Check if the onload event occurs when the request complete">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onload_event.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onloadend_exist" purpose="Check if the XMLHttpRequestEventTarget.onloadend exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onloadend_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onloadend_event" purpose="Check if the onloadend event occurs when the request complete">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onloadend_event.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onloadstart_exist" purpose="Check if the XMLHttpRequestEventTarget.onloadstart exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onloadstart_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onloadstart_event" purpose="Check if the onloadstart event occurs event when the request start">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onloadstart_event.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onprogress_exist" purpose="Check if the XMLHttpRequestEventTarget.onprogress exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onprogress_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onprogress_event" purpose="Check if the onprogress event occurs when sending and loading data">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onprogress_event.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_onreadystatechange_exist" purpose="Check if the XMLHttpRequest.onreadystatechange exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_onreadystatechange_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_onreadystatechange_event" purpose="Check if the onreadystatechange event occurs when The readyState attribute changes at some seemingly arbitrary times for historical reasons">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_onreadystatechange_event.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_ontimeout_exist" purpose="Check if XMLHttpRequestEventTarget.ontimeout exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_ontimeout_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_ontimeout_event" purpose="Check if the ontimeout event occurs when the author specified timeout has passed before the request could complete">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_ontimeout_event.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_open_exist" purpose="Check if the XMLHttpRequest.open exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_open_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_OPENED_exist" purpose="Check if XMLHttpRequest.OPENED exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_OPENED_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_OPENED_type" purpose="Check if the type of XMLHttpRequest.OPENED is 'number'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_OPENED_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_overrideMimeType_exist" purpose="Check if xmlhttprequest.overrideMimeType method exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_overrideMimeType_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_readyState_exist" purpose="Check if the XMLHttpRequest.readyState exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_readyState_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_readyState_type" purpose="Check if the type of XMLHttpRequest.readyState is 'number'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_readyState_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_exist" purpose="Check if the XMLHttpRequest.response exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseText_readonly" purpose="Check if XMLHttpRequest.responseText is readonly">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseText_readonly.html</test_script_entry>
        </description>
      </testcase>
    </set>
    <set name="XMLHttpRequest2" type="js">
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseText_exist" purpose="Check if XMLHttpRequest Level2 has responseText attribute">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseText_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseText_type" purpose="Check if the type of XMLHttpRequest.responseText is 'string'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseText_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseType_exist" purpose="Check if the XMLHttpRequest.responseType exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseType_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseXML_exist" purpose="Check if XMLHttpRequest Level2 has responseXML attribute">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseXML_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseXML_type" purpose="Check if the type of XMLHttpRequest.responseXML is 'object Document'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseXML_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_send_exist" purpose="Check if xmlhttprequest.send method exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_send_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_setRequestHeader_exist" purpose="Check if xmlhttprequest.setRequestHeader method exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_setRequestHeader_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_status_exist" purpose="Check if XMLHttpRequest Level2 has status attribute">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_status_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_status_type" purpose="Check if the type of XMLHttpRequest.status is 'number'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_status_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_statusText_exist" purpose="Check if the XMLHttpRequest.statusText exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_statusText_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_statusText_type" purpose="Check if the type of XMLHttpRequest.statusText is 'string'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_statusText_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_timeout_exist" purpose="Check if the XMLHttpRequest.timeout exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_timeout_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_timeout_type" purpose="Check if the type of XMLHttpRequest.timeout is 'number'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_timeout_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_UNSENT_exist" purpose="Check if XMLHttpRequest.UNSENT exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_UNSENT_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_UNSENT_type" purpose="Check if the type of XMLHttpRequest.UNSENT is 'number'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_UNSENT_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_withCredentials_exist" purpose="Check if the XMLHttpRequest.withCredentials exists">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_withCredentials_exist.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_withCredentials_type" purpose="Check if the type of XMLHttpRequest.withCredentials is 'boolean'">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_withCredentials_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_FormData_constructors_base" purpose="Check if FormData's constructor returns a new FormData object">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_FormData_constructors_base.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_FormData_append_basic" purpose="Check if formdata.append method can be called normally">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_FormData_append_basic.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_send_Blob" purpose="Check if XMLHttpRequest can send Blob data normally">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_send_Blob.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_responseType_arraybuffer_readyState_DONE" purpose="Check if XMLHttpRequest.response returns the arraybuffer response entity body when responseType is arraybuffer and the state is DONE">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_responseType_arraybuffer_readyState_DONE.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_responseType_blob_readyState_DONE" purpose="Check if XMLHttpRequest.response returns the blob response entity body when responseType is blob and the state is DONE">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_responseType_blob_readyState_DONE.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="abort-during-done" purpose="Check the function of abort method during done">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/abort-during-done.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="abort-during-open" purpose="Check if abort method aborts network activity during OPEN">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/abort-during-open.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="abort-during-unsent" purpose="Check if UNSENT state can be switched when attempt to abort network activity during UNSENT">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/abort-during-unsent.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="abort-event-listeners" purpose="Check if abort method will reset event listeners">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/abort-event-listeners.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="abort-event-loadend" purpose="XMLHttpRequest: The abort() method: Fire a progress event named loadend">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/abort-event-loadend.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="abort-upload-event-abort" purpose="XMLHttpRequest: The abort() method: Fire a progress event named abort on the XMLHttpRequestUpload object">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/abort-upload-event-abort.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="abort-upload-event-loadend" purpose="XMLHttpRequest: The abort() method: Fire a progress event named loadend on the XMLHttpRequestUpload object">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/abort-upload-event-loadend.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="event-abort" purpose="XMLHttpRequest: abort event">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/event-abort.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="event-load" purpose="XMLHttpRequest: The send() method: Fire an event named load (synchronous flag is unset)">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/event-load.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="event-loadend" purpose="XMLHttpRequest: loadend event">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/event-loadend.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="event-loadstart" purpose="XMLHttpRequest: loadstart event">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/event-loadstart.htm</test_script_entry>
        </description>
      </testcase>
    </set>
    <set name="XMLHttpRequest3" type="js">
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="event-progress" purpose="XMLHttpRequest: The send() method: Fire a progress event named progress (synchronous flag is unset)">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/event-progress.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="event-readystatechange-loaded" purpose="XMLHttpRequest: the LOADING state change should only happen once">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/event-readystatechange-loaded.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="event-upload-progress" purpose="XMLHttpRequest: upload progress event">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/event-upload-progress.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="formdata-delete" purpose="Check if FormData.delete can work normally" subcase="7">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/formdata-delete.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="formdata-get" purpose="Check if FormData.get can work normally" subcase="12">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/formdata-get.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="formdata-has" purpose="Check if FormData.has can work normally" subcase="6">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/formdata-has.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="getresponseheader-server-date" purpose="Check if can get server and date header by getResponseHeader method">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/getresponseheader-server-date.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-after-abort" purpose="XMLHttpRequest: open() after abort()">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-after-abort.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-method-bogus" purpose="Test XMLHttpRequest: open() - bogus method" subcase="4">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-method-bogus.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-method-insecure" purpose="Test XMLHttpRequest: open() - insecure method" subcase="9">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-method-insecure.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-method-responsetype-set-sync" purpose="Test XMLHttpRequest: open() - responsetype set sync" subcase="5">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-method-responsetype-set-sync.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-open-send" purpose="XMLHttpRequest: open() - open() - send()">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-open-send.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-open-sync-send" purpose="XMLHttpRequest: open() - open() (sync) - send()">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-open-sync-send.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-send-open" purpose="XMLHttpRequest: open() - send() - open()">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-send-open.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-url-about-blank-window" purpose="Check if open method resolves URLs (about: blank iframe)">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-url-about-blank-window.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-url-base-inserted-after-open" purpose="XMLHttpRequest: open() resolving URLs - insert base after open()">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-url-base-inserted-after-open.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-url-base" purpose="XMLHttpRequest: open() resolving URLs - base">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-url-base.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-url-javascript-window-2" purpose="XMLHttpRequest: open() - resolving URLs (javascript: iframe; 2)">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-url-javascript-window-2.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-url-javascript-window" purpose="Check if open() method resolving URLs after open">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-url-javascript-window.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-url-multi-window" purpose="Check if open() method resolving URLs in multi window">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-url-multi-window.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-url-worker-simple" purpose="XMLHttpRequest: relative URLs in worker scripts resolved by script URL">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-url-worker-simple.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-user-password-non-same-origin" purpose="XMLHttpRequest: open() - user/pass argument and non same-origin URL doesn't throw">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-user-password-non-same-origin.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="responsexml-basic" purpose="Test XMLHttpRequest: responseXML" subcase="2">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/responsexml-basic.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="responsexml-document-properties" purpose="Test XMLHttpRequest: responseXML document properties" subcase="20">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/responsexml-document-properties.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="responsexml-media-type" purpose="Test XMLHttpRequest: responseXML MIME type" subcase="15">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/responsexml-media-type.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="responsexml-non-well-formed" purpose="Test XMLHttpRequest: responseXML non well formed" subcase="7">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/responsexml-non-well-formed.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-no-response-event-loadstart" purpose="XMLHttpRequest: The send() method: Fire a progress event named loadstart (no response entity body and the state is LOADING)">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-no-response-event-loadstart.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-response-upload-event-loadend" purpose="XMLHttpRequest: The send() method: Fire a progress event named loadend on the XMLHttpRequestUpload (synchronous flag is unset)">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-response-upload-event-loadend.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-response-upload-event-loadstart" purpose="XMLHttpRequest: The send() method: Fire a progress event named loadstart on the XMLHttpRequestUpload (synchronous flag is unset)">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-response-upload-event-loadstart.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-response-upload-event-progress" purpose="XMLHttpRequest: The send() method: Fire a progress event named progress on the XMLHttpRequestUpload (synchronous flag is unset)">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-response-upload-event-progress.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-send" purpose="Check if decoding responseText can be received when attempt to send() - send()">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-send.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-sync-timeout" purpose="XMLHttpRequest: timeout during sync send() should not run">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-sync-timeout.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="setrequestheader-after-send" purpose="Check if InvalidStateError can be thrown setRequestHeader() after send()">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/setrequestheader-after-send.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="setrequestheader-before-open" purpose="setRequestHeader invoked before open()">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/setrequestheader-before-open.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="setrequestheader-bogus-name" purpose="Test XMLHttpRequest: setRequestHeader() name argument" subcase="19">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/setrequestheader-bogus-name.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="withcredentials-set" purpose="Test XMLHttpRequest: withcredentials set" subcase="2">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/withcredentials-set.htm</test_script_entry>
        </description>
      </testcase>
    </set>
    <set name="XMLHttpRequest4" type="js">
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="withcredentials-wrong-state" purpose="XMLHttpRequest: setting withCredentials when not in UNSENT, OPENED state">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/withcredentials-wrong-state.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xmlhttprequest-basic" purpose="Check prototype and members of XMLHttpRequest">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/xmlhttprequest-basic.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xmlhttprequest-eventtarget" purpose="XMLHttpRequest: implements EventTarget">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/xmlhttprequest-eventtarget.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="event-timeout" purpose="XMLHttpRequest: timeout event">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/event-timeout.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="getresponseheader-case-insensitive" purpose="Check if case-insensitive matching">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/getresponseheader-case-insensitive.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="overridemimetype-open-state-force-utf-8" purpose="XMLHttpRequest: overrideMimeType() in open state, enforcing UTF-8 encoding">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/overridemimetype-open-state-force-utf-8.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="overridemimetype-open-state-force-xml" purpose="XMLHttpRequest: overrideMimeType() in open state, XML MIME type with UTF-8 charset">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/overridemimetype-open-state-force-xml.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="overridemimetype-unsent-state-force-shiftjis" purpose="XMLHttpRequest: overrideMimeType() in unsent state, enforcing Shift-JIS encoding">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/overridemimetype-unsent-state-force-shiftjis.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="responsetext-decoding" purpose="Test XMLHttpRequest: responseText decoding" subcase="15">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/responsetext-decoding.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-after-setting-document-domain" purpose="Test XMLHttpRequest: send after setting document domain" subcase="2">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-after-setting-document-domain.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-redirect-bogus" purpose="Test XMLHttpRequest: send() - Redirects bogus" subcase="4">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-redirect-bogus.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-redirect-no-location" purpose="Test XMLHttpRequest: send() - Redirects no Location" subcase="4">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-redirect-no-location.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-redirect-to-non-cors" onload_delay="10" purpose="Test XMLHttpRequest: send() - Redirect to  non CORS" subcase="4">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-redirect-to-non-cors.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="setrequestheader-case-insensitive" purpose="Check if headers differ in case">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/setrequestheader-case-insensitive.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="setrequestheader-header-allowed" purpose="Test XMLHttpRequest: setRequestHeader() - header allowed" subcase="8">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/setrequestheader-header-allowed.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="setrequestheader-header-forbidden" purpose="Check if headers forbidded set by setRequestHeader()">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/setrequestheader-header-forbidden.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="open-after-setrequestheader" purpose="XMLHttpRequest: open() after setRequestHeader()">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/open-after-setrequestheader.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="responsetype" purpose="Test XMLHttpRequest: reponseType" subcase="6">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/responsetype.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-data-arraybuffer" purpose="Check if the date of send method is ArrayBuffer let the request entity body be the raw data represented by ArrayBuffer">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-data-arraybuffer.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-data-blob" purpose="Check if the date of send method is Blob let the request entity body be the raw data represented by Blob">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-data-blob.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-data-formdata" purpose="Check if the date of send method is Formdate let the request entity body be the raw data represented by Formdate">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-data-formdata.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-network-error-async-events" purpose="Check if fire a progress event named error when send method Network error happens and synchronous flag is unset">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-network-error-async-events.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-network-error-sync-events" purpose="Check if throw a NetworkError exception when the method of send Network error happens and synchronous flag is set">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-network-error-sync-events.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="response-data-arraybuffer" purpose="Check if responseType is arraybuffer return the arraybuffer response entity body">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/response-data-arraybuffer.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="response-data-blob" purpose="Check if responseType is blob return the blob response entity body">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/response-data-blob.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="overridemimetype-done-state" purpose="Check if the state is done the method of overrideMimeType throw an InvalidStateError exception">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/overridemimetype-done-state.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="overridemimetype-invalid-mime-type" purpose="Check if invalid MIME types the method of overrideMimeType throw a TypeError exception">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/overridemimetype-invalid-mime-type.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="getresponseheader-unsent-opened-state" purpose="Check if the state is UNSENT or OPENED the method of getResponseHeade return null">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/getresponseheader-unsent-opened-state.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="abort-event-abort" purpose="Check if when method abort is called and state is OPENED with the send flag being unset must not fire abort event">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/abort-event-abort.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="setrequestheader-allow-empty-value" purpose="Test XMLHttpRequest: setrequestheader() - allow empty value" subcase="3">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/setrequestheader-allow-empty-value.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-entity-body-get-head" purpose="Test XMLHttpRequest: send entity body get head" subcase="2">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-entity-body-get-head.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-entity-body-document-bogus" purpose="Check if the document cannot be serialized an InvalidStateError exception is thrown">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-entity-body-document-bogus.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-no-response-event-loadend" purpose="Check if the send method will fire a progress event named loadend if no response entity body">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-no-response-event-loadend.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="send-sync-no-response-event-load" purpose="Check if the send method fire an event named load if no response entity body and the synchronous flag is set">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/send-sync-no-response-event-load.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="setrequestheader-bogus-value" purpose="Test XMLHttpRequest: setrequestheader() -bogus value" subcase="4">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/setrequestheader-bogus-value.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="timeout-sync" purpose="Test XMLHttpRequest: timeout sync" subcase="2">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/timeout-sync.htm</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xmlhttprequest-timeout-simple" onload_delay="20" purpose="Test XMLHttpRequest: timeout simple" subcase="3">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/w3c/xmlhttprequest-timeout-simple.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_abort_type" purpose="Check if the type of xmlhttprequest.abort is function">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_abort_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_constructors_base" purpose="Check if XMLHttpRequest(options) returns a new XMLHttpRequest object">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_constructors_base.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_getAllResponseHeaders_error_flag_set" purpose="Check if the error flag is set, XMLHttpRequest.getAllResponseHeaders() will return the empty string and terminate these steps">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_getAllResponseHeaders_error_flag_set.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_getAllResponseHeaders_return_type" purpose="Check if the return type of XMLHttpRequest.getAllResponseHeaders() is string">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_getAllResponseHeaders_return_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_getResponseHeader_error_flag_set" purpose="Check if the error flag is set, XMLHttpRequest.getResponseHeader() will return null and terminate these steps">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_getResponseHeader_error_flag_set.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_getResponseHeader_type" purpose="Check if the type of xmlhttprequest.getResponseHeader is a function">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_getResponseHeader_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_onreadystatechange_default_null" purpose="Check if the default value of onreadystatechange attribute is null">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_onreadystatechange_default_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_open_type" purpose="Check if the type of xmlhttprequest.open is a function">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_open_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_overrideMimeType_basic" purpose="Check if use xmlhttprequest.overrideMimeType to set the Content-Type header for the response to mime">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_overrideMimeType_basic.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_overrideMimeType_type" purpose="Check if the type of xmlhttprequest.overrideMimeType is function">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_overrideMimeType_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_readyState_readonly" purpose="Check if XMLHttpRequest.readyState attribute is readonly">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_readyState_readonly.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_basic" purpose="Check if XMLHttpRequest.response can return the text response entity body normally">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_basic.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_readonly" purpose="Check if the XMLHttpRequest.response attribute is readonly">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_readonly.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_responseType_blob_readyState_not_DONE" purpose="Check if XMLHttpRequest.response is null, when responseType is not the empty string and text and the state is not DONE">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_responseType_blob_readyState_not_DONE.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_responseType_document_readyState_DONE" purpose="Check if XMLHttpRequest.response returns the document response entity body when responseType is document and the state is DONE">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_responseType_document_readyState_DONE.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_responseType_empty_string_error_flag_set" purpose="Check if XMLHttpRequest.response is an empty string, when responseType is an empty string and the error flag is set">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_responseType_empty_string_error_flag_set.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_responseType_empty_string_readyState_UNSENT" purpose="Check if XMLHttpRequest.response is an empty string, when responseType is the empty string and the state is UNSENT">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_responseType_empty_string_readyState_UNSENT.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_responseType_text_error_flag_set" purpose="Check if XMLHttpRequest.response is an empty string, when responseType is text and the error flag is set">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_responseType_text_error_flag_set.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_response_responseType_text_readyState_UNSENT" purpose="Check if XMLHttpRequest.response is an empty string, when responseType is text and the state is UNSENT">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_response_responseType_text_readyState_UNSENT.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseText_basic" purpose="Check if XMLHttpRequest.responseText can return the document response entity body normally">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseText_basic.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseText_error_flag_set" purpose="Check if the XmlHttpRequest error flag is set and calls XMLHttpRequest.responseText that expecting an empty string to be returned">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseText_error_flag_set.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseText_exception_InvalidStateError" purpose="Check if responseType is not the empty string and text and calls XMLHttpRequest.responseText that expecting an exception InvalidStateError to be thrown">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseText_exception_InvalidStateError.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseType_basic" purpose="Check if the value of XMLHttpRequest.responseType is normal">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseType_basic.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseType_default" purpose="Check if the default value of responseType is the empty string">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseType_default.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseType_readyState_DONE" purpose="Check if the state is DONE and calls XMLHttpRequest.responseType that expecting an exception InvalidStateError to be thrown">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseType_readyState_DONE.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseType_readyState_LOADING" purpose="Check if the state is LOADING and calls XMLHttpRequest.responseType that expecting an exception InvalidStateError to be thrown">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseType_readyState_LOADING.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseType_type" purpose="Check if the type of responseType is string">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseType_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseXML_error_flag_set" purpose="Check if the XmlHttpRequest error flag is set and calls XMLHttpRequest.responseXML that expecting a null to be returned">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseXML_error_flag_set.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseXML_exception_InvalidStateError" purpose="Check if responseType is not the empty string or document and calls XMLHttpRequest.responseXML that expecting an exception InvalidStateError to be thrown">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseXML_exception_InvalidStateError.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseXML_readonly" purpose="Check if the XMLHttpRequest.responseXML attribute is readonly">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseXML_readonly.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_responseXML_readyState_not_DONE" purpose="Check if the XmlHttpRequest state is not DONE and calls XMLHttpRequest.responseXML that expecting a null to be returned">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_responseXML_readyState_not_DONE.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_send_ArrayBufferView" purpose="Check if XMLHttpRequest can send ArrayBufferView data normally">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_send_ArrayBufferView.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_send_FormData" purpose="Check if XMLHttpRequest can send FormData data normally">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_send_FormData.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_send_send_flag_set" purpose="Check if the send() flag is set and call XMLHttpRequest.send() that expecting an exception InvalidStateError to be thrown">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_send_send_flag_set.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_send_type" purpose="Check if the type of xmlhttprequest.send is a function">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_send_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_setRequestHeader_type" purpose="Check if the type of xmlhttprequest.setRequestHeader is function">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_setRequestHeader_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_status_error_flag_set" purpose="Check if XMLHttpRequest.status is 0, when error flag is set">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_status_error_flag_set.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_status_readonly" purpose="Check if the xmlhttprequest.status attribute is readonly">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_status_readonly.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_status_readyState_UNSENT" purpose="Check if XMLHttpRequest.status is 0, when the readyState is UNSENT">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_status_readyState_UNSENT.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_statusText_error_flag_set" purpose="Check if XMLHttpRequest.statusText is an empty string, when error flag is set">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_statusText_error_flag_set.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_statusText_readonly" purpose="Check if the xmlhttprequest.statusText attribute is readonly">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_statusText_readonly.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_statusText_readyState_UNSENT" purpose="Check if XMLHttpRequest.statusText is an empty string, when the readyState is UNSENT">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_statusText_readyState_UNSENT.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_timeout_basic" purpose="Check if the value of XMLHttpRequest.timeout is normal">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_timeout_basic.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_timeout_default_zero" purpose="Check if the default value of timeout attribute is 0">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_timeout_default_zero.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_timeout_exception_InvalidAccessError" purpose="Check if an exception InvalidAccessError will be thrown when there is an associated XMLHttpRequest document and the synchronous flag is set">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_timeout_exception_InvalidAccessError.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_upload_readonly" purpose="Check if the xmlhttprequest.upload attribute is readonly">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_upload_readonly.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_upload_type" purpose="Check if the type of xmlhttprequest.upload is a object XMLHttpRequestUpload">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_upload_type.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_withCredentials_default_false" purpose="Check if the default value of withCredentials attribute is false">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_withCredentials_default_false.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_withCredentials_InvalidStateError" purpose="Check if the readyState is not OPENED or UNSENT then set XMLHttpRequest.withCredentials false that expecting an execption InvalidStateError to be thrown">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_withCredentials_InvalidStateError.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequest_withCredentials_send_flag_set" purpose="Check if the send flag is set and calls XMLHttpRequest.withCredentials that expecting an exception InvalidStateError to be thrown">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequest_withCredentials_send_flag_set.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onabort_default_null" purpose="Check if the default value of onabort attribute is null">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onabort_default_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onerror_default_null" purpose="Check if the default value of onerror attribute is null">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onerror_default_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onload_default_null" purpose="Check if the default value of onload attribute is null">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onload_default_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onloadend_default_null" purpose="Check if the default value of onloadend attribute is null">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onloadend_default_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onloadstart_default_null" purpose="Check if the default value of onloadstart attribute is null">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onloadstart_default_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_onprogress_default_null" purpose="Check if the default value of onprogress attribute is null">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_onprogress_default_null.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2" execution_type="auto" id="xhr2_XMLHttpRequestEventTarget_ontimeout_default_null" purpose="Check if the default value of ontimeout attribute is null">
        <description>
          <test_script_entry>/opt/tct-xmlhttprequest-w3c-tests/xmlhttprequest/xhr2_XMLHttpRequestEventTarget_ontimeout_default_null.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>
